{"id":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","dependencies":[{"name":"/project/bicycle-parking/package.json","includedInParent":true,"mtime":1666342076334},{"name":"/project/bicycle-parking/node_modules/mathjs/package.json","includedInParent":true,"mtime":1666342076142},{"name":"../../utils/factory.js","loc":{"line":1,"column":24,"index":24},"parent":"/project/bicycle-parking/node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","resolved":"/project/bicycle-parking/node_modules/mathjs/lib/esm/utils/factory.js"},{"name":"../../utils/array.js","loc":{"line":2,"column":33,"index":83},"parent":"/project/bicycle-parking/node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","resolved":"/project/bicycle-parking/node_modules/mathjs/lib/esm/utils/array.js"},{"name":"../../utils/is.js","loc":{"line":3,"column":23,"index":130},"parent":"/project/bicycle-parking/node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","resolved":"/project/bicycle-parking/node_modules/mathjs/lib/esm/utils/is.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetMatrixDataType = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar name = 'getMatrixDataType';\nvar dependencies = ['typed'];\nvar createGetMatrixDataType = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Find the data type of all elements in a matrix or array,\n   * for example 'number' if all items are a number and 'Complex' if all values\n   * are complex numbers.\n   * If a matrix contains more than one data type, it will return 'mixed'.\n   *\n   * Syntax:\n   *\n   *    math.getMatrixDataType(x)\n   *\n   * Examples:\n   *\n   *    const x = [ [1, 2, 3], [4, 5, 6] ]\n   *    const mixedX = [ [1, true], [2, 3] ]\n   *    const fractionX = [ [math.fraction(1, 3)], [math.fraction(1, 3] ]\n   *    const unitX = [ [math.unit('5cm')], [math.unit('5cm')] ]\n   *    const bigNumberX = [ [math.bignumber(1)], [math.bignumber(0)] ]\n   *    const sparse = math.sparse(x)\n   *    const dense = math.matrix(x)\n   *    math.getMatrixDataType(x)   // returns 'number'\n   *    math.getMatrixDataType(sparse)   // returns 'number'\n   *    math.getMatrixDataType(dense)   // returns 'number'\n   *    math.getMatrixDataType(mixedX) // returns 'mixed'\n   *    math.getMatrixDataType(fractionX) // returns 'Fraction'\n   *    math.getMatrixDataType(unitX) // returns 'Unit'\n   *    math.getMatrixDataType(bigNumberX) // return 'BigNumber'\n   *\n   * See also:\n   *  SparseMatrix, DenseMatrix\n   *\n   * @param {...Matrix | Array} x   The Matrix with values.\n   *\n   * @return {string} A string representation of the matrix type\n   */\n\n  return typed(name, {\n    Array: function Array(x) {\n      return (0, _array.getArrayDataType)(x, _is.typeOf);\n    },\n    Matrix: function Matrix(x) {\n      return x.getDataType();\n    }\n  });\n});\nexports.createGetMatrixDataType = createGetMatrixDataType;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":4,"column":4},"name":"name"},{"generated":{"line":14,"column":8},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":4,"column":8}},{"generated":{"line":14,"column":11},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":4,"column":11}},{"generated":{"line":14,"column":30},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":5,"column":4},"name":"dependencies"},{"generated":{"line":15,"column":16},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":5,"column":16}},{"generated":{"line":15,"column":19},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":20},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":5,"column":20}},{"generated":{"line":15,"column":27},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":28},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":7}},{"generated":{"line":16,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":11},"name":"createGetMatrixDataType"},{"generated":{"line":16,"column":27},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":34}},{"generated":{"line":16,"column":30},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":37}},{"generated":{"line":16,"column":45},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":52}},{"generated":{"line":16,"column":49},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":52},"name":"factory"},{"generated":{"line":16,"column":65},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":52}},{"generated":{"line":16,"column":67},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":60},"name":"name"},{"generated":{"line":16,"column":71},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":52}},{"generated":{"line":16,"column":73},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":66},"name":"dependencies"},{"generated":{"line":16,"column":85},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":52}},{"generated":{"line":16,"column":87},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":80}},{"generated":{"line":16,"column":97},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":80},"name":"_ref"},{"generated":{"line":16,"column":101},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":84}},{"generated":{"line":16,"column":103},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":88}},{"generated":{"line":17,"column":2},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":7,"column":2}},{"generated":{"line":17,"column":6},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":8,"column":4},"name":"typed"},{"generated":{"line":17,"column":11},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":7,"column":2}},{"generated":{"line":17,"column":14},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":9,"column":6},"name":"_ref"},{"generated":{"line":17,"column":18},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":7,"column":2}},{"generated":{"line":17,"column":19},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":8,"column":4},"name":"typed"},{"generated":{"line":17,"column":24},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":7,"column":2}},{"generated":{"line":18,"column":2},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":10,"column":2}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":11,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":12,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":13,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":14,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":15,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":16,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":17,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":18,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":19,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":20,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":21,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":22,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":24,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":28,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":29,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":30,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":31,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":32,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":33,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":34,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":35,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":36,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":37,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":38,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":39,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":40,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":41,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":42,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":43,"column":0}},{"generated":{"line":53,"column":2},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":2}},{"generated":{"line":53,"column":9},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":9},"name":"typed"},{"generated":{"line":53,"column":14},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":14}},{"generated":{"line":53,"column":15},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":15},"name":"name"},{"generated":{"line":53,"column":19},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":14}},{"generated":{"line":53,"column":21},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":21}},{"generated":{"line":54,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":4},"name":"Array"},{"generated":{"line":54,"column":9},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":9}},{"generated":{"line":54,"column":11},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":11}},{"generated":{"line":54,"column":20},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":20},"name":"Array"},{"generated":{"line":54,"column":25},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":11}},{"generated":{"line":54,"column":26},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":26},"name":"x"},{"generated":{"line":54,"column":27},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":11}},{"generated":{"line":54,"column":29},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":45,"column":29}},{"generated":{"line":55,"column":6},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":6}},{"generated":{"line":55,"column":13},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":13}},{"generated":{"line":55,"column":17},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":13},"name":"getArrayDataType"},{"generated":{"line":55,"column":40},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":13}},{"generated":{"line":55,"column":42},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":30},"name":"x"},{"generated":{"line":55,"column":43},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":13}},{"generated":{"line":55,"column":45},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":33},"name":"typeOf"},{"generated":{"line":55,"column":55},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":13}},{"generated":{"line":55,"column":56},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":46,"column":6}},{"generated":{"line":56,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":47,"column":5}},{"generated":{"line":56,"column":5},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":21}},{"generated":{"line":57,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":4},"name":"Matrix"},{"generated":{"line":57,"column":10},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":10}},{"generated":{"line":57,"column":12},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":12}},{"generated":{"line":57,"column":21},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":21},"name":"Matrix"},{"generated":{"line":57,"column":27},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":12}},{"generated":{"line":57,"column":28},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":28},"name":"x"},{"generated":{"line":57,"column":29},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":12}},{"generated":{"line":57,"column":31},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":48,"column":31}},{"generated":{"line":58,"column":6},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":49,"column":6}},{"generated":{"line":58,"column":13},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":49,"column":13},"name":"x"},{"generated":{"line":58,"column":14},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":49,"column":14}},{"generated":{"line":58,"column":15},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":49,"column":15},"name":"getDataType"},{"generated":{"line":58,"column":26},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":49,"column":13}},{"generated":{"line":58,"column":28},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":49,"column":6}},{"generated":{"line":59,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":50,"column":5}},{"generated":{"line":60,"column":2},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":21}},{"generated":{"line":60,"column":3},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":14}},{"generated":{"line":60,"column":4},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":44,"column":2}},{"generated":{"line":61,"column":0},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":52,"column":1}},{"generated":{"line":61,"column":1},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":52}},{"generated":{"line":61,"column":2},"source":"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js","original":{"line":6,"column":7}}],"sources":{"node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js":"import { factory } from '../../utils/factory.js';\nimport { getArrayDataType } from '../../utils/array.js';\nimport { typeOf } from '../../utils/is.js';\nvar name = 'getMatrixDataType';\nvar dependencies = ['typed'];\nexport var createGetMatrixDataType = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Find the data type of all elements in a matrix or array,\n   * for example 'number' if all items are a number and 'Complex' if all values\n   * are complex numbers.\n   * If a matrix contains more than one data type, it will return 'mixed'.\n   *\n   * Syntax:\n   *\n   *    math.getMatrixDataType(x)\n   *\n   * Examples:\n   *\n   *    const x = [ [1, 2, 3], [4, 5, 6] ]\n   *    const mixedX = [ [1, true], [2, 3] ]\n   *    const fractionX = [ [math.fraction(1, 3)], [math.fraction(1, 3] ]\n   *    const unitX = [ [math.unit('5cm')], [math.unit('5cm')] ]\n   *    const bigNumberX = [ [math.bignumber(1)], [math.bignumber(0)] ]\n   *    const sparse = math.sparse(x)\n   *    const dense = math.matrix(x)\n   *    math.getMatrixDataType(x)   // returns 'number'\n   *    math.getMatrixDataType(sparse)   // returns 'number'\n   *    math.getMatrixDataType(dense)   // returns 'number'\n   *    math.getMatrixDataType(mixedX) // returns 'mixed'\n   *    math.getMatrixDataType(fractionX) // returns 'Fraction'\n   *    math.getMatrixDataType(unitX) // returns 'Unit'\n   *    math.getMatrixDataType(bigNumberX) // return 'BigNumber'\n   *\n   * See also:\n   *  SparseMatrix, DenseMatrix\n   *\n   * @param {...Matrix | Array} x   The Matrix with values.\n   *\n   * @return {string} A string representation of the matrix type\n   */\n  return typed(name, {\n    Array: function Array(x) {\n      return getArrayDataType(x, typeOf);\n    },\n    Matrix: function Matrix(x) {\n      return x.getDataType();\n    }\n  });\n});"},"lineCount":null}},"error":null,"hash":"b05e81b21682ab117739a10c18bf90a5","cacheData":{"env":{}}}