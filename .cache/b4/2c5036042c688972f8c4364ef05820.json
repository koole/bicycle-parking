{"id":"node_modules/easystarjs/src/easystar.js","dependencies":[{"name":"/project/bicycle-parking/package.json","includedInParent":true,"mtime":1666342076334},{"name":"/project/bicycle-parking/node_modules/easystarjs/package.json","includedInParent":true,"mtime":1664883510185},{"name":"./instance","loc":{"line":10,"column":23,"index":198},"parent":"/project/bicycle-parking/node_modules/easystarjs/src/easystar.js","resolved":"/project/bicycle-parking/node_modules/easystarjs/src/instance.js"},{"name":"./node","loc":{"line":11,"column":19,"index":232},"parent":"/project/bicycle-parking/node_modules/easystarjs/src/easystar.js","resolved":"/project/bicycle-parking/node_modules/easystarjs/src/node.js"},{"name":"heap","loc":{"line":12,"column":19,"index":262},"parent":"/project/bicycle-parking/node_modules/easystarjs/src/easystar.js","resolved":"/project/bicycle-parking/node_modules/heap/index.js"}],"generated":{"js":"/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/easystarjs/src/easystar.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}}],"sources":{"node_modules/easystarjs/src/easystar.js":"/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n"},"lineCount":557}},"error":null,"hash":"1656a7d07ecf9e2beb554eefe3549fe9","cacheData":{"env":{}}}