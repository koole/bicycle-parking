{"version":3,"sources":["src/map.js","node_modules/easystarjs/src/instance.js","node_modules/easystarjs/src/node.js","node_modules/heap/lib/heap.js","node_modules/heap/index.js","node_modules/easystarjs/src/easystar.js","src/Cell.js","src/Agent.js","src/Agents/SmartAgent.js","src/Agents/RandomAgent.js","src/Agents/ClosestAgent.js","src/World.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["map","mapDirection","MAX_PARKED_BIKES","Cell","world","type","x","y","allowed_direction","agents","bikes","agent","filter","length","push","a","ctx","squareSize","drawDirection","drawCoords","drawCount","canvas_x","canvas_y","color","getCellColor","fillStyle","fillRect","font","globalAlpha","arrow","fillText","String","padStart","bikeAgents","pedestrianAgents","forEach","i","path","cell","drawBike","drawPedestrian","includes","orientation","Agent","strategy","spawn","parked_cell","move_to","exitRate","calculatingPath","stage","ticks","ticks_to_parked","ticks_to_goal","bikePathfinder","pedestrianPathfinder","addTimeToPark","addTimeToGoal","location","canPark","addBike","addLotCapacity","hasParked","removeBike","removeLotCapacity","callback","pathfinder","getPathfinder","findPath","console","log","calculate","nextCell","checkAddAgent","moveAgent","shift","getCellAtCoordinates","makeMove","buildingCell","getRandomCellOfType","changeMoveTo","executePathSequence","hasReachedGoal","Math","random","unpark","lotChoice","removeAgent","warn","SmartAgent","lots","lotPreference","changePreference","searchPath","searchTime","searchFail","min","max","floor","coordinates","Array","randomValueInRange","goal_cell","X","Y","state","new_goal_cell","maxPref","index","indexOf","round","startAct","checkPreference","randomLotCoordinates","getNeighbourSpotsInLot","decreasePreference","choice","getLotCapacity","lotSearch","park","increasePreference","finishedParkingStages","RandomAgent","parkingCell","ClosestAgent","coords","Q","grid","label","BFS","V","pop","dirs","next","valid_types","undefined","getDirectionArray","direction","EasyStar","BOTTOM","TOP","LEFT","RIGHT","World","worldmap","selectedStrategies","agentsActive","agentsInactive","northCapacity","eastCapacity","midCapacity","westCapacity","tickCount","rows","split","row","directionRows","types","S","E","b","w","p","_","o","js","entries","directionRow","rowData","c","setDirectionalCondition","setGrid","setAcceptableTiles","setTileCost","cells","flat","stragegy","oldAgent","find","addAgent","respawn","AgentClass","getAgentClass","newAgent","sort","act","experimentTicks","automatedLoopLength","maxSpawnRateLimit","STRATEGIES","currentTick","csvRowsPark","csvRowsGoal","timeToParkData","timeToGoalData","trendData","clearTrendData","experimentMode","spawnRateType","minSpawnRate","maxSpawnRate","tickDelay","oldTickDelay","spawnspeed","paused","reset","strategyName","toLowerCase","replace","s","d","toUpperCase","document","getElementById","onclick","getSpawnRate","currentBin","pow","sin","PI","spawnRates","updateSpawnRates","drawSpawnRate","innerHTML","canvas","getContext","width","height","barWidth","barHeight","clearRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","currentIndex","arc","fill","addEventListener","e","target","value","event","disabled","strategyCheckboxes","container","createElement","classList","add","checkbox","id","checked","htmlFor","appendChild","createTextNode","data","google","charts","load","packages","setOnLoadCallback","DrawChart","DrawTrend","openResultsModal","closeResultsModal","style","display","visualization","arrayToDataTable","options","bar","gap","interpolateNulls","chartArea","left","top","bottom","histogram","bucketSize","maxNumBuckets","minValue","maxValue","lastBucketPercentile","chart","Histogram","draw","dataRows","strategies","Object","keys","strategyData","averagedData","slice","average","reduce","maxDataPoints","dataCombined","dataColumns","trendlines","visibleInLegend","trendOptions","explorer","trendChart","LineChart","gameTick","rate","spawnAgent","tick","setTimeout","gridWidth","gridHeight","canvasWidth","canvasHeight","drawCanvas","requestAnimationFrame","downloadCSV","csv","filename","csvFile","downloadLink","Blob","download","join","href","window","URL","createObjectURL","body","click","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module"],"mappings":"AKAA,AJAA,ACAA,AEAA,ASAA,ACAA,IDAI2U,ACAAW,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;ATCA,AJAA,ACAA,AEAA,ADDA;AEEA,AJAA,ACAA,ACDA,AUAA,ACCA,SDDSX,ACCAY,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;ARE9B,AJAA,ACAA,ACDA,EUAE,ACCA,IDDI,ACCAC,CDDCf,MCCM,GDDX,ACCcc,EDDE,ECCE,CAACE,SAAL,EAAd;ATCF,AJAA,ACAA,ACDA,IUAIhB,SAAS,GAAGE,YAAY,EAAxB;AREJ,AJAA,ACAA,ACDA,EUAG,ACADa,OAAO,CAACE,MAAR,GAAiB,YAAY;ATE/B,AJAA,ACAA,ACDA,AHLA,IcKIH,AdLEzV,GAAG,CcKD,CAAC6V,MAAL,u1CdLJ;AKOA,AJAA,ACAA,ACDA,AINA,AGAA,ADAA,ADAA,AGAA,AXuCO,EajCL,ACAC,CAFD,CdmCW5V,KajCJ0U,ObiCgB,EajCvB,61CbiCK;AK/BP,AJAA,ACAA,ACDA,AUAC,ADPD;APSA,AJAA,ACAA,ACDA,AQNA,EGKEe,OAAO,CAACrB,IAAR,CduEarU,EcvEEyV,IAAI,CAACpB,IAAL,CAAU3K,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCoM,IAAI,CAACC,GAAL,EAA/C;ATGF,AJAA,ACAA,ACDA,AUAA,ADRA,EEOEN,IAAI,CAACO,EDCEnB,QCDP,CAAgBoB,GDClB,GAAwB,MCDtB,CAA6BP,OAA7B,EAAsCD,IAAI,CAACS,WAA3C;ATGF,AJAA,ACAA,ACDA,AWDC,AHLD,EEME;AREF,AJAA,ACAA,ACDA,ASRA,ECQE,IAAI;AREN,AJAA,ACAA,ACDA,AWDA,ARXA,AKKA,IEOI,ACDAC,ARXEjW,MOYI,IAAI4U,ACDA,GAAG,EDCP,CPZY,COYlB,ACDJ,ERXyB,CAAzB;ADcA,AHAA,ACDA,EUAG,CAFD,CAEE,OAAOC,GAAP,EAAY;AREhB,AHAA,ACDA,AWFA,AHNA,IEQI,ANZEpS,ADAAxC,IOYE6U,CCFCoB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGrB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;AREJ,AHAA,ACDA,EWFE,APVA,ADAA,IQUIiB,UAAJ,ARVY/V,CCAAA,COUI,GRVhB,CCAA,CDAmBC,CCAAA,GDAnB,CCAA,CDAyBC,CCAAgC,ADAzB,EAA4B/B,CAA5B,CCAA,CDA+BC,CCAAoC,QAA/B,EAAyC,MDAzC,EAAkD;ADcpD,AHAA,ACDA,AQTA,IEQI,ACDA,APXuC,ADAS,IOY5CoS,OAAJ,EAAa;ARGjB,AHAA,ACDA,EWFG,IDCG,OAAOG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;ARGN,AHAA,ACDA,IUDK,ANbD,ADAA,KCAK5U,ADAAC,IAAL,CCAA,EDAYA,CCACD,GDAb,ECAA;AFgBJ,AHAA,ACDA,EUDG,ACDD+V,EPZE,ADAA,KCAK9V,ADAAC,CAAL,EQYQ,CPZR,ADASA,CAAT,CQYWgT,CPZCjT,IAAZ,KOYqB,CAAC,YAAY;ATItC,AHAA,ACDA,IWFI,APZA,ADAA,IQYIgW,CPZCxT,ADAAtC,CAAL,GQYS,ARZAA,CCAT,ADAA,EQYY6M,CPZC9K,IAAb,GOYoB,CAACgU,gBAAT,CAA0B,wBAA1B,CAAZ;ATIJ,AFDA,EUDE,ENbE,ADAA,KOaK,ANbAhU,ADAA7B,GOaP,CNbE,EDAA,CCAY6B,EDAE,ECAd,ADAA;ADgBJ,AFDA,AUDC,ICFG,APXA,ADAA,KQWK,APXAQ,ADAApC,IQWI0B,CAAC,ARXV,GQWa,ARXA,CQWb,ARXA,EQWgBA,APXhB,COWiB,EPXE,COWCiU,GPXpB,EOWyB,CAACxV,MAA1B,EAAkCuB,CAAC,EAAnC,EAAuC;ATK3C,AFDA,IIdI,ADAA,EQWE,GPXGQ,ADAApC,CQWC8U,MAAM,CAACH,APXb,GAAgBvS,MDAhB,CQWM,CAAkByT,APXxB,CDAyB7V,IQWI,CAAC4B,CAAD,CAAL,CAASiS,IAA3B,KRXN,CQW2CiB,MAAM,CAACT,YAAP,EAAzC,EAAgE;ATKtE,AFDA,AUDA,EPbG,ECAC,ADEF,IQSMW,CDECL,ANbApS,OAAL,EOWc,CDElB,ACFmBsT,APXA,CMaCjB,GAApB,ANbI,COWoB,CDEC,ACFAhT,CAAD,CAAN,CAAV;ATKR,AFDA,EUDE,ENbE,EOWG,GDEE,ANbAY,CMaC,KAAKoS,ENbX,CMaK,EAAWpI,ANbA,IAAhB,CARuC,CAQjB,CMajB,CAAmB,gFAAnB,EAAqG,IAArG,IAA6G,GAApH;ARGF,AFDA,AUDC,ICFI,APVD;AFeJ,AFDA,IIbI;AFeJ,AFDA,AUDAqI,ICFIc,GDEG,CAACtB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;ARGA,AFDA,AUDAS,ECFG,CATsB,CPFrB,COWC,EDEE,ACXkB,CDWjBF,ACXN,CPFO9S,EDFP,ECEE,GAAY,EMahB,ENbI,CMaiB8S,UAArB,GPfgBxU,KAAd,EAAqB;ADkBvB,AFDA,AWHC,IPXG,EDFA,GCEKsC,CDFD,KAAK5C,IAAL,KCEJ,ADFkB,GCEK,IDFvB,CCEA,CDF2B;ADkB/B,AFDA,IIdI,IDFE,CCEG6C,KAAL,CDFS,ECEI,EDFX,KCEF;AFgBJ,AFDA,AWHAqT,IPVI,AEjBE7O,EK2BA,ARbD,CQaE2N,EPVElS,KOUT,APVI,GOUaiT,APVA,CAAb,QOUJ;ATKA,AFDA,IIbI,KAAKhT,eAAL,GAAuB,IAAvB;AFeJ,AFDA,IIbI,EDHA,GCGKC,CDHD,KAAKhD,IAAL,GCGJ,EDHkB,CCGG,IAArB,cDHI,IAAqCM,KAAK,CAACN,IAAN,KAAe,YAAxD,EAAsE;ADkB1E,AFDA,EIbG,MDHG,OAAO,IAAP;ADkBN,AFDA,MGhBK,CAPkB,CAQnB;ADiBJ,AFDA,EMlCE,IHmBE,iBGnBUD,KAAZ,EAAmBC,IAAnB,EAAyBiC,IAAzB,EAA+B;AJoCjC,AFDA,IMnCiC,EHoB7B;ADiBJ,AFDA,MGfI,KCAF,mBAAU;AFiBZ,AFDA,IMrCiC,EFsB7B,ADAA,KCAKY,KAAL,GAAa,OAAb,GErBM9C,KADuB,EAChBC,IADgB,EACViC,IADU,EACJ,QADI;AJuCjC,AFDA,ASpCA,EHAG,IFqBC,KAAKA,IAAL,GAAY,KAAKO,KAAjB;AFiBJ,AFDA,ASpCA,MLqBI,KAAKC,WAAL,GAAmB,IAAnB;AFiBJ,AFDA,ASpCA,MLqBI,ADFA,IACEnC,CCCGoC,IDDE,CAAC1C,ECCR,EDDE,CCCa,IAAf,ADDiB,MAAf,IACA,KAAKI,MAAL,CAAYG,MAAZ,CAAmB;ADiBzB,AFDA,ASpCA,IJNM6E,AIMAiG,ELqBF,EDDqB,GCChBrJ,CDDmBhC,GCCxB,CDDqB,ECCT,CKrBK,GLqBjB,AKrBoB,ENoBIA,GMpB5B,CNoByB;ADkBzB,AFDA,ASpCA,IAAMsL,ELqBF,EDFqB,GCEhB1I,AEvBP,IHqBqC5C,IAAI,IMnBlB,CNmBuB,ECE5C,AEvBI,AGEoB,GLqBD,AKrB3B,CNmByB,ICErB;AFiBJ,AFDA,ASpCA,IAAMuL,ELqBF,AExBI,AHqBiB,CAAnB,EAAkD/K,ECG/CsC,IDHH,CCGF,GAAa,ADHiD,CCG9D,CDLA,AMhBmB,ENmBjB,CMnBoB,CAA1B,EAEA;APoCA,AFDA,ASlCA,MLmBI,EDFE,GCEGC,IDFI,KAAP,MCEF,GAAuB,IAAvB;AFiBJ,AFDA,AQvCA,ACKA,MLmBI,AEzBA,AHuBC,GKtBIoF,EJwBAnF,AEzBA0D,QAAL,KFyBA,EIxBJ,CJwByB,AIxBE0B,IJwBvB,KIxBJ,EAAsC;ANyCtC,AFDA,EK9CE,AGOA,EJwBC,MIxBOA,SAAR,GHPYrI,KAAZ,EAAmBC,IAAnB,EAAyBiC,IAAzB,EAA+B;AHgDjC,AFDA,ASlCA,IJbiC,AGQ7B,ACKEuJ,EHNF,AHsBA,GKrBK,CLsBHlL,EKtBF,EFDQ,AGMI,CNiBL,CAACN,CMjBO,CAAC,CHNH6C,CHuBX,IGvBF,CHuBiB,AMjBF,EAAU,QAAV,ENiBb,AMjBiC,INkBjC,KAAKzC,AMlBQ,CAAnB,EAEA,GNgBM,CAAYG,MAAZ,CAAmB;ADkBzB,AFDA,MQvCM,EFDA,AHuBmB,IAAGP,CGvBjB,AECE,CAACqI,ELsBW,IGvBnB,KHuBsBrI,IAAH,IKtBX,CAASsI,MAAV,CAAP;ANyCN,AFDA,ASjCA,IFjBMf,AFC2B,AIgB7BqB,INeqB,EGtBjB,CFwBN,GExBYtB,CHsByBtH,IAAI,GMfrB,ENe0B,CGtBvB,AGOA,CAAC,EHPE,KAAKD,AGOR,EAAU,CLiBjB,ADFO,EGtBG,CAAW2E,IGOd,EAAoB,SAApB,CAAzB,GHP4B,CAA+B,SAA/B,CAApB;AJ0CR,AFDA,AShCA,IDRI,ACQA+G,ELgBA,ADHqB,CAAnB,EAAwDjL,AKrBrD,CFAD,EEAJ,CJwBO,EExBEmE,AHqBP,AMbS,GLgBC3E,AKhBE,CNasD,AMbxE,ENWI,CCKO,CDFL,ICEmB,AExBjB,CAAkBsH,KFwBf,GACH,GEzB6B,CAACrH,CFyBzBF,AEzBL,EAAiCuH,GFyBjC,CAAWrE,OEzBiC,CAAC/C,CAA7C,EAAgD,GFwB7C,GAEH,KAAKH,CE1BiD,IF0BtD,CAAWmD,oBAFf;AFkBJ,AFDA,AS/BA,ILiBG,ACpCC,AImBAwI,EDTE,ELsBA,IGtBI,CEAG,CAACrD,CLsBD,AMbE,EHTD,CAACxF,AGSG,ENaZ,GGtBI,GAAa,IDVb9C,GGUI,CAASwI,CHVnB,AImBJ,EJnBiBvI,AGUJ,CAAP,GHVF,EAAmBiC,IAAnB,EAAyB,KCUnB,EDVN,EAD6B,CAG7B;AHkDJ,AFDA,AS/BA,IAAI0J,ENaC,IGtBI,CAFD,IGWO,GAAG,iBAAlB;APiCA,AFDA,AS9BA,IJnBI,AGQA,ACWAC,KDXK,CFCD,ADTCvG,EGQL,EHRA,GAAY,CAAC,AImBC,GAAG,CAACuD,GJnBN,EAAU,MAAV,EAAkB,KAAlB,AImBK,CAArB,CJnByC,MAAzB,CAAZ;AHmDJ,AFDA,AS9BA,EFxBE,EFKE,AImBAiD,ENWA,AKtBE,IHRG5G,AF+BH3E,CCGJ,EI1BW,CAAC+H,CLuBH,CAACrI,EMZM,CJnBd,CF+BE,CMZe,CJnBA,AImBC4I,EFxBR7I,CJoCO,CE/BjB,CAL6B,CAM7B,CENF,EAAmBC,AJoCf,CCGQ,CI1BA,CAASwI,CDbrB,AJqCI,EIrCqBvG,CCad,CAAP,CLwBK7B,AMbU,CFxBnB,AEwBF,EFxBiC,GJqC3B,CAAYG,MAAZ,CAAmB;ADmBzB,AFDA,AS9BA,IFzBiC,AEyB7BuL,ELeA,EE1BE,AHuBmB,GCGhB/I,CDHmB/C,CGvBjB,AGWE,GNYY,AMZT,EAAhB,EACA,KNW4BA,CCGxB,GAAuB,ADHF,KCGO8C,KAA5B,EE1BE;AJ2CN,AFDA,IKjDI,AGOA,EJ2BA,EDJqB,CKvBhB,CJ2BLK,AE1BI,ADRCmC,EGOL,GFCSV,AHsB0B5E,IAAI,IE9BvC,CF8B4C,EE9BvB,CACnB8E,GDiCF,CCjCM,CDiCQ,ACjCPC,ECOH,CAAyB,CHsBR,CCIFxC,CCjCjB,EADmB,EAEnBuC,GDgCF,CChCM,CDgCuB,AE1BM,ADN5BC,KDgC2BhC,CChChC,EAFmB,EAGnB+B,IAAI,CAACC,KD+BP,CC/BE,EAHmB,EAInBD,IAAI,CAACC,MAAL,EAJmB,CAArB;AHmDJ,AFDA,AS9BA,ILeG,AG1C8B,AFa7B,EFwBqB,AKtBnB,CLsBA,EAAwDvE,AMVrDuL,CJdAxG,ECGC,CEDG,CAAC8C,CLsBR,EGrBQ,CAACxF,CHqByD,EAFpE,EGnBM,AHsBJ,AMXN,GHXuB,ADHnB,AIcsB,GF1BhB9C,AFYkB,IAAxB,AGEU,CDfmB,AFAA,AGeV0I,CFCb,ADHwB,CEZjBzI,GCcJ,CDfoB,ACe3B,EDdiBiC,IADU,EACJ,SADI;AL2DjC,AFDA,EOxDG,AE0BD6J,EJbE,IFwBE,EGtBG,CAFD,AGaG,GAAG,CNWD,CMXX,INWI;ADqBN,AFDA,ES9BElD,EDbE,ELwBC,GKxBI,CFED,EEFJ,QCagB,CAAC9G,OAAnB,CAA2B,UAACS,QAAD,EAAc;APgC3C,AFDA,IK5CI,AIcAuJ,EDbE,IHDGtG,CD4BP,EI3BW,ACaA,CDbC6C,ACaA9F,MJdV,EIcS,CJdS,AIclB,EJdA,CIcsB,EAAtB,KDbU,CAASgG,GJ2BJ,AI3BN,EAAeF,mBAAA,CAASC,MAAxB,CAAP;AN6CN,AFDA,ES9BG,CAFD,CJZE,ED4BA,ADJA,EGtBE,EDFG7C,AFyBHnF,CCGG0C,EE1BE,EHuBA,CAAChD,IEzBR,AFyBE,EGvBA,CDFgB,CD4BlB,AC5BA,CAjB6B,AF0CZ,CEzBI,CD4BA,KAAK8C,KAA1B,ADHE,IACA,KAAK1C,MAAL,CAAYG,MAAZ,CAAmB;ADoBzB,AFDA,AS9BC,IDdG,EJ4BA,EDHqB,CKzBhB,CJ4BL6C,AE1BI,CChBN,CJuC0BpD,AKzBxB,EFEQ,EHuBa,GGvBRkH,IAAL,EAAJ,AHuBoBlH,CIvCpB,CDgBiB,EHuBA,CCGrB,EAAc,KAAKuC,QAAnB,EAA6B,KAAKS,aAAlC;AFkBJ,AFDA,IIhBG,AC7BC,EEdI,ACeF,ELwBmB,EEzBhB0C,ECGC,CEFG,CAAC2C,CLwByBrI,EGtBxB6C,EHsB4B,CEzBvC,ECGM,CDHY,CAAlB,AFyB4C,CGtBzB,KHsBE,GKxBX,CAAS2F,IAAV,EAAgBH,EFEnB,iBEFmB,CAASI,KAAzB,CAAP;AN8CN,AFDA,AS/BAsD,IJjCiC,EF2CR,CAAnB,EAAkDvL,CGrB/C,CAFD,GGaM,CNUR,EGrBS,EHqBmD,EAF9D,EAGE;ADsBN,AFDA,AS9BA,EJhBG,EAED,AGDE,ACeAwL,EF9BA,EJwCE,GIxCGtF,CDkBC,GHsBG,EGtBE7D,CGYG,CF9Bd,CJwCE,CMVe,CHZX,GAAa,CGYvB,MHZU;AJ4CV,AFDA,AS7BA,EJfE,EIeEoJ,ENSC,AKzBC,IFGG,CFyBP,EI5BW,CAAC5D,GCgBG,GAAG,KLYbhF,CKZP,EAEA,KLUE,AI5BY,CAASkF,CJ4BN,EI5BJ,EAAeF,mBAAA,CAASC,MAAxB,EAAgCD,mBAAA,CAASG,IAAzC,EAA+CH,mBAAA,CAASI,KAAxD,CAAP;AN+CN,AFDA,EK5CE,AGhBA,IJ2CE,AG3CA,IH2CI,IG3CI,CH2CCxG,IAAL,AG3CSY,CH2CCS,IG3Cd,GH2CI,EAAJ,EAAyB;AFmB7B,AFDA,AQ7CC,ACiBD,EJfE,EIeI4I,ENOF,ECIE,AG3CA,EDiBE,EF2BA,CG5CG,AJuCA,GMPO,CLYLlM,ADLT,EMPiB,CFhCf,CH4CE,CKZR,ILYsB,MAAd,IACA,KAAKiC,IAAL,CAAUjC,IAAV,KAAmB,SADnB,IAEA,KAAKyC,WAAL,KAAqB,IAHvB,EAIE;AFeR,AFDA,AS5BA,INOG,AMPC0J,MLeI,AG/CA,KH+CK1J,CKfG,GAAG,CAAnB,EAEA,ILaQ,GAAmB,KAAKR,IAAxB;AFeR,AFDA,IQ7CMyG,IFCA,EF+BE,AG/CA,IAAIlB,CH+CCxH,IAAL,CG/CU,EH+CE,CG/CC,WH+Cb;AFeR,AFDA,AS3BA,EDlBE,ECkBEoM,MLcI,AE/BA,ECjBenM,CAAC,AEkCX,ELcAgC,AGhDa,ADiBbmF,CCjBQ,AEkCL,CDlBFuB,CCkBd,CLcQ,CAAUpF,KIhChB,EJgCM,AIhCgB3D,SFChB,GEDN,EAAoCgJ,kBAApC,EAAwD;AN+C1D,AFDA,AS3BA,IDnB0D,ACmBtDyD,MLcI,AE/BA,CHsBN,CIxC2BnM,CAAC,EHiDjBH,AGjDmB,CEmChB,GAAGqM,CLcX,CAAW5I,OKdnB,CNKWlD,KAAT,CCSM,CAA0B+C,ADThB,QCSV;AFeR,AFDA,AS3BA,IAAIiJ,EHvCA,AH4CA,ICSI,AGlDa,CAAb,AFgBN,AFyBOlM,GMLK,CLcDqD,EDTT,AMLa,CNKDhD,EMLhB,ENKI,CAAiBH,CCSb,IDTJ,WEzBiBqF,GAAnB,EAAwBC,GAAxB,EAA6B;AHiD/B,AFDA,AS1BA,IHlBG,AHsBA,AK1BuD,ACsBtD2G,EJrBA,IDkCI,AGlDA,AEqCE,GJrBCzH,AIqBE,CFrCD2C,CAAC,EHkDE,AClCA,CEhBC,AFgBA5B,AIqBhB,EFrCQ,AEuCR,CLWQ,EClCG,CAAWf,IAAI,CAACC,MAAL,MAAiBa,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AHiDJ,AFDA,ASxBA,IJvBG,EAED,EDgCK,EGlDC,IAAI+B,IAAI,GAAG,EAAX;ALiER,AFDA,ASxBA,IDzBI,EJoCC,GIpCItB,KAAL,GAAa,EAAb;ANmDJ,AFDA,ASvBA,ID1BI,KAAKyC,CDfD,CJyCN,GIzCYlB,KAAK,ECef,CDfkB,ECeE,EAApB,CAFsD,CAE9B,GDfdA,CJyCArH,IIzCQ,CAAUL,AJyC9B,CIzCoB,CJyCD,CIzCcC,CAAb,EAAgB;ALkEtC,AFDA,EM/E0BoC,IFiEtB,ADTA,KAAKlC,CI1C6B,CHmD3B,IDTP,CCSA,EDTc,KAAKA,MAAL,CAAYG,MAAZ,CAAmB,UAACG,CAAD;ADyBrC,AFDA,ASxBA,ILUG,AIpCC,IL0BiC,CK1B5BoI,AC0BA0D,EJxBP,GIwBF,CNA4C9L,CAAC,CMA5B,INAiCJ,EK1B9C,GL0BiC,AK1BX,EAAtB,CAHsD,CAG5B,WHEP+C,QAArB,EAA+B;AHkDjC,AFDA,ESxBEtD,EDzBE,EHCA,AFuBiC,CAAnB,AMCX,CNDH,EMCM,EF1CA,EE0CI2I,CHvBCrB,QCnBLK,IAAI,CAACxH,AE0CL,CF1CI,AE0CMyI,CF1CV,WE0CA,EAAoB/I,iBAApB,CAAR,cF1CQ8H,IAAI,CAACxH,CAAD,CAAJ,GAAY,EAAZ;ALoEV,AFDA,ESxBE0L,ENDC,EEvBC,IAAI9F,EElBE4B,IAAI,AE0CE,CF1CDxH,CAAD,CAAJ,AE0CS,CF1CDD,AE0CE2I,CF1CV,AFkBS,GAAG,CElBC,CAAb,EFkBgB7C,KAAJ,CAAU,CAAV,CAAlB,EIwBe,CAAjB;AP0BF,AFDA,ESxBE8F,ED1BE,KAAK9C,CDhBA,CHmDP,AGtDM,KE6CQ,GAAG,CAACH,ED1BhB,GAAqB,CAArB,CJmCKvF,QAAP,EAAiB,CKTA,CAAjB;AP0BF,AFDA,ESxBE0I,ED1BE,EJmCA,ACjCA,GGFK/C,CJoCH,AClCE3F,KDkCGrD,CKVK,EJxBA,CDkCV,EIpCF,CHEgB,EDkCA,AIpCI,CAApB,IHEA,EAAyB,KDkCvB,IACA,KAAKiC,IAAL,CAAUjC,IAAV,KAAmB,SADnB,IAEA,KAAKyC,WAAL,KAAqB,IAHvB,EAIE;AFaN,AFDA,ESxBEiJ,ED1BE,IJuCE,ACrCA5F,CGFGmD,CDjBDtB,CJyCN,ECeS1F,AKbE,EF3CA,CAAC,AE2CE,CLaV,CAAUyB,CCrCC,CAAC,AGFd,CDjBezB,AFmBF,CAAX,CGFiB,CAAnB,CDjBU,AFmBS,CEnBChC,CAAX,CHwDP,CGxDqB,CFmBC+F,AFsBhB,GMEV,CF3C8B/D,IAAL,CAAU/B,CAAxB,CAAL,OFmBe,CAAwB,EAAxB,EAA4B,EAA5B,CAAjB;AHkDN,AFDA,ESxBEyL,ED1BE,ELwBA,ECeE,ACrCA7F,CGFGoD,CDjBDzB,CAAC,EHwDE1H,ADfA,AMEE,EF3CA,CAAC,AE2CE,ELaV,ADfUC,CCeC2D,ACrCA,CAAC,CEnBC1B,AFmBF,AGFb,CHEE,AFsBK,EKxBa,CDjBV,AFmBS,AGFnB,CDjBoBhC,CAAX,AJyCY,EIzCE,CFmBC+F,GIwB1B,CF3C8B/D,EHwD1B,ADfK,CCewBoB,CGxDR,CAAUnD,CAAxB,AJyCyB,CIzC7B,IHwDH,ADfqCG,GEtBpB,CAAwB,CAAxB,AFsBe,EEtBY,CAA3B,AFsB4BR,CEtB7C,eEnBsC4H,AJyCxC,CIzCK,EAAD;ALqER,AFDA,ESxBEgE,ENFC,AKvBC,EHCC,EDqCC,CItCGtC,IJsCE1G,AKbE,GAAG,CAAd,CDzBE,GAAiB,CAAjB,CAXsD,CJiDpD,AIpCF,GJoCqB,IAAnB;AFaN,AFDA,ESxBEuJ,MLaI,EGzDEpE,GHyDG5H,AGzDA,EAAE,CE4CG,CLaV,EKba,CLaD,EGzDEyH,CAAC,CAACjH,AE4CpB,ELaI,IGzDO,EAAiB;ALsE9B,AFDA,ASxBC,EAED,ED1BI,EJqCC,ACtCD,EGCM4I,EHDF/F,EEnBE,ACoBI,GAAGsF,CDpBDd,CAAC,CFmBD,EEnBIJ,CAAC,CAACK,AFmBF,CGCK,CAACuB,CDpBN,EAAV,CFmBN,CGCa,CHDW,AGCI,IAAf,EAAqB9I,MAArB,CAA4B,UAAC+I,GAAD;ANkD7C,AFDA,IIXG,EItC0C,EHAvCxD,GFsBJ,CIzCQ,CCmB4CwD,GDnBtCrH,ACmByC,CAACzB,EHAzC,CEnBG,AFmBF,CAAD,CAAX,CEnBiB,ACmB+B,EHA/B,CGA4C,CAAtB,CDnBjBT,EFmBAiG,AFsBhB,GIzCW,CAAWzB,cFmBX,CAAwB,EAAxB,EAA4B,CEnB5B,CAAgCsD,AFmBhC,CEnBiC,AFmBlD,CEnBmD,CAAD,CAAjC,EAAsCA,CAAC,CAAC,CAAD,CAAvC,CAAb;ALsEV,AFDA,IQlD6C,CAA5B,CLuBb,AKvBA,KLuBKxH,KAAL;AD6BJ,AFDA,ASxBA,INHG,AKvBC,IHAE,AGAIkJ,CC0BDkD,GF7CC,AFmBA3H,IEnBI7C,AFmBA,CAAC8C,GEnBG,CAACzB,ACmBI,AC0BvB,CAAsBf,CJ1BZ,CGAgB3C,IDnBZ,AFmBY,EEnBhB,AE6CV,EF7C8B,AFmBxB,AI0B0B,EJ1BA,EGAM,CAC/ByJ,KADmB,CACb,IADa,EAEnB9I,MAFmB,CAEZ,UAAC+I,GAAD;ANkDd,AFDA,ESxBE,IDzBY,GCyBL/G,CJ1BDuD,CDsCN,EIrCqBwD,CDpBX9B,ECoBc,CAAChH,ACyBV,CACZkM,EF9Ca,CFmBC,CAAC,CEnBC,AFmBF,AGCI,CHDf,EGC4B,CHDX,AGCX,ECyBL,GJ1BqB1G,AI4BzB2G,CLUU1M,CAAb,EAAgBC,CAAhB,EAAmB0D,AKZZ,CAEI,OLUX,EAA6B,CCtCN,CAAwB,EAAxB,EAA4B,AI0B5C,EJ1BgB,AI4BK,CJ5BtB,SI4BuBgJ,CAAD,EAAIxC,CAAJ,EAAOyC,CAAP;APwB9B,AFDA,IQlDc,AC2BgB,CD7BJ,CJuCK,AIvC3B,CAfsD,CHiBnD,AGEH,CHJE,EI8BAzC,CAAC,GJ5BM,AI4BHA,CFhDanK,AEgDZ,CFhDa,AEgDZ6M,EFhDcjF,CAAC,CAAC,CAAD,CAAN,KEgDX,EAAH,GAAqB,MAAMgF,CAAC,CAACC,WAAF,EADJ;APyB9B,AFDA,ESxB8B,CAFrB,CAAP,MJxBMhH,CFsBN,KI3C8B5F,CAAC,EAAE2H,CAAC,CAAC,AFqBlB,CErBiB,AFqBhB,CAAD,CAAX,GAAiB,EAAjB,IFsBO;AD8Bf,AFDA,AStBC,EAED,ED7BI,EJmCA,ADdA,EEtBG,AGCG2B,GJmCD5G,ADdAvC,EKrBM,CDvBM,CAAT,CJ4CR,AKrBc,UJmCd,GAAuB,IAAvB;AFgBJ,AFDA,IG5BG,ECcC,ACpCC,AGCC,KJmCGqC,GG1DG,IH0DR,EG1DckF,CH0DC,CAAC3H,CAAD,AG1DP,EH0DWC,CAAJ,CAAf;AFgBJ,AFDA,MIdI,AInCEuJ,CAAC,EAAE,EJmCAzH,CG1DE,GH0DP,CIrCc,EJqCF,IAAZ;AFgBJ,AFDA,AStBA+K,MLSI,ACtCA,AGEErD,CAAC,CC2BC,CD3BC,AC2BAsD,CLSCnJ,ACtCFR,KGDU,GHCF,EDsCI,ECtCA,CDsCG,AKTvB,CAAwB,GJ7BpB,CDsCwBS,CCtCD,YDsCJ,AKTvB,ELSI,AKTuCmJ,OAA3C,GAAqD,YAAY;APwBjE,AFDA,EStBET,ILSE3I,AIpCEqC,CAAC,AC2BA,CJ7BDJ,CGEG,ELoBP,CI5CQ,IH4DI,AG5DEiC,CH4DDhE,ECtCE,CEtBG,AFsBF,CAAD,CAAX,CEtBiB,CACX,CH2DR,AG3DS8D,AFqBU,AFsBhBlH,CCiBD,AG5DQ,CAAC,CAAD,AJ2CZ,AKxBgB,CDnBN,CFqBgBqF,AFsBhB/F,CCiBDgC,AG5DQ4F,AJ2CjB,CI3CkB,CAAC,AJ2CN3H,CI3CK,AJ2ClB,CCiBI,AG5Da,CH4DHD,ADjBEW,CCgBd,CG3DsB,CH6DpB,AG7DM,CADW,EAEX,CAACiH,CH4DF5F,AG5DG,CAAC,CAAD,AJ0CZ,CI1CU,CH4DN,ACxCiB,AFsBOpB,CCkBdX,AG5DG2H,AFoB4B,CDsC3C,AG1DgB,CAAC,AFoBE,CDyCjB,AG7Dc,CAAD,AFoBgC,EAA5B,CEpBG,AFoBpB,CDyCKnF,AG7DC,CAFW,EAGX,CAACmF,AJyCX,CIzCY,CAAC,AJyC8B/G,CCmBvC,AG5DQ,CH4DK,AG5DN,CH4DP,CAHF,CGzDgB,CH6Dd,AG7DM,EAAW+G,CAAC,CAAC,AJyCvB,CCoBSnF,AG7Da,CAAZ,AJyC6C3B,CI5ClC,EAIX,CAAC8G,CAAC,CH4DR,AG5DS,CH4DI,AG5DL,CH4DR,AG5DO,CHwDT,ADhBF,ECqBI,AG7Dc,AJwCgD,CIxCxD,EAAWA,CAAC,CAAC,CAAD,CAAZ,CAJW,CAAb,CHiEH7F,IAAD,EAAU;AFUhB,AFDA,EStBEoK,INRkE,AKnB9DzC,CAAC,CJyCC,AC3CF7D,CGEG,EC2BE,CLcC9D,EKdE,CAAZ,CLcc,GC3CC,CAAC,AGHA,CJ8CG,AC3CJ,CAAX,GD2CE,AC3Ce,ED2CI,GC3CCgE,kBAAL,CAAwB,EAAxB,EAA4B,EAA5B,CAAjB;AHqDN,AFDA,EStBEgG,IJ7BG,AGECpC,CAAC,EAAE,CJyCC,EG7DA,GH6DI,CAAC5H,AKdC,GAAG,CLcT,GAAYA,AKdpB,GDjCgB,CJ+CR,UG7DqB+F,IAArB,2BAA2B;ALuErC,AFDA,EStBEwE,INTE,AKlBE7L,CAAC,CJyCE,AKdD,CLYA,AIvCC,CLkBCM,CMSC,GFhD0B,CH8DtB,CKdb,ENTgB,CKzBA,ELyBGf,CAAC,GAAGW,UAArB;ADiCJ,AFDA,AStBC,CALD,EAOA,GJhCI,AFqBA,AKlBEiJ,CAAC,EAAE,CJyCC7F,AC5CFX,AFqBEpC,OCuBO,CAACgD,AC5CF,AFqBE,AK1BA,GJiDR,ADvBW/D,CCuBC,AC5CF,AFqBE,GAAGU,GErBrB,EAAwB,KFqBxB,uBCuBM;AFUV,AFDA,ASpBA,MNVI,AKnBE,EJyCG,AC5CHkF,EFsBE5E,II1CO,CJ0CF,GAAG,CEtBC,CAAC,CAAD,CAAX,GAAiB,EFsBnB,GEtBwB8E,kBAAL,CAAwB,CAAxB,EAA2B,CAA3B,CAAjB;AHsDN,AFDA,ASpBA,MNTI9E,AKpBE4I,CAAC,CHHDhE,CGGG,ELoBA,GI5CM,AJ4CH,EK9BM,EDdI5F,CAAP,AFqBE,AFuBAiB,CEvBC,CAAD,CAAX,GAAiB,KAAK6E,CFuBhB,CAAkB9E,KAAlB,CAAR,UEvBmB,CAAwB,EAAxB,EAA4B,EAA5B,CAAjB;AHsDN,AFDA,ASnBA,MJjCK,AFwBDP,AKrBEoJ,CAAC,CJwCC,CDnBD,AKrBE,CLqBD3I,GCmBI,CAACwB,AGjEE,IAAU3C,CAAV,AJ8CX,GAAgBiB,KAAhB,ECmBI,GAAuB,KAAvB;AFWR,AFDA,ASnBA,ID1CkB,CAAd,CLiCAP,GAAG,CAACU,QAAJ,CAAaL,QAAb,EAAuBC,QAAvB,EAAiCL,UAAjC,EAA6CA,UAA7C,EATgE,CAWhE;AD4BJ,AFDA,ASlBA,ID9BI,EHJA,ED0CI,CItCCqC,GJsCGW,CC1CDkC,CEvBC,IAAIkC,EHiEI,EGjEA,CC2BhB,CJsCoBhG,AC1CpB,EGIsB,EJsCE,EItCEqG,GJsCG,IAAzB,EAA+B,SGjEhB,CC2BO,CAAS2B,EAAb,CD3BEjK,CC2BxB,ID3BmB,CAAWqG,KAAX,CAAiBlG,CAAjB,CAAH,wDAAG,oBAAsBD,CAAtB,CAAX;AL6EZ,AFDA,IKpDG,AGIC,EHFF,AFuBE,GKrBKiD,CJsCCU,ADjBF/C,IIhDI,IHiEM,AGjEFoH,KJgDZ,EAAmB,IIhDI,AC2BvB,GD3B0B,AC2BE,CD1BlB,GC0BsBI,ID3BN,EAEhB,WAFgB,EAGhB,ACwBsB,CAAS2B,EAAb,EAA5B,CAnCsD,CAqCtD,GD7B0B,EAIhB,SAJgB,EAKhB,MALgB,CAAlB;AL6EZ,AFDA,IQ9CI,IJoCK,ADjBHrJ,GAAG,CAACW,IAAJ,GAAW,gBAAX;AD6BN,AFDA,ASpBA,MLUO,CAfH,CDFEX,CMOGuM,ENPA,CAAC9L,EI3CE,IACE4G,GJ0CR,AMON,CFjDkB,AEiDImF,ENPA,GI1CCjF,KEiDvB,CNPM,CAFiB,AMSW,CNN5B,CI3CQ,IACAD,WAAW,CAAC7F,QAAZ,CAAqB4F,IAAI,CAAChI,IAA1B,CADA,IAEA,aAAA0H,IAAI,CAACxH,CAAD,CAAJ,sDAAUD,CAAV,OAAiB,CAHnB,EAIE;ALoEd,AFDA,ESpBE,EDlEwD,EJ8EtD4D,GKXAqI,OLWU,AG1DAvE,CH0DCzD,IG1DI,AE+CH,CF/CIjE,CAAD,CEgDf,CFhDmBC,AEgDlBiM,CLUD,AG1De,CAAL,UEgDG,GAAGD,OD7BO9C,IAAI,CAACa,AC6B5B,IACAnF,GD9BuB,CC8BnB,CDrEkD,ACqEjDsI,GAAL,CACE,CAACtI,IAAI,CAACuI,GAAL,CAAUF,UAAU,GAAG7B,mBAAd,GAAqC,CAArC,GAAyCxG,IAAI,CAACwI,EAAvD,IAA6D,CAA9D,IAAmE,CADrE,EAEE,CAFF,CAHF;APsBF,AFDA,ASbC,EAED,ELGG,AI/EuD,IL4DpD3M,GE1BJ,AF0BO,CAACY,IIvCIkG,CAAC,IAAI,CAACxH,CAAD,AJuCb,EIvCiBC,CAAJ,AJuCK,CIvCT,EJuCT,cE1BmB+F,SAAvB,EAAkC,CEbNwB,CAAf,EAAD;ALoEd,AFDA,MKpDI,EFyBE,GEzBG,CFyBCjG,EIvCG,CFcA0E,CAAC,CFyBC,EEzBAD,CFyBG,EAAZ,MEzBkB,CAAChG,CAAV,GAAc,CAAzB,EAA4BiG,CAAC,IAAID,SAAS,CAAChG,CAAV,GAAa,CAA9C,EAAiDiG,CAAC,EAAlD,EAAqD;AHsDzD,AFDA,IQzF0D,IHqCpD,IEdK,CFcA,IAAIC,CAAC,GAACF,SAAS,CAAC/F,CAAV,GAAc,CAAzB,EAA4BiG,CAAC,IAAIF,SAAS,CAAC/F,CAAV,GAAa,CAA9C,EAAiDiG,CAAC,EAAlD,EAAsD;AHsD5D,AFDA,ASbA,IAAIoH,ED7EsD,EL8DpD,EItCG,AFcD,CD2CN,CDnBQ,EExBE,AIuCE,GNfCpN,AMeE,EJvCAJ,AIuCjB,KJvCY,CAAWqG,ID2CZjC,CC3CC,CAAiBgC,CAAjB,EAAoBD,AFwBtB,CExBE,ED2CV,AC3CiClG,ED2Cd,ADnBgB,EExBzB,CFwBN,EAAoC,CExBC,SAAnC,EAA8C;AHsDtD,AFDA,MITI,EIlFsD,EJkFlDmE,ADnBA3C,EExBE,GFwBG,CExBA0E,CAAC,CD2CE,ADnBA,CCmBC9B,EC3CC6B,AFwBV,SExBmB,CAAChG,CD2CpB,AC3CK,CD2CkB,GC3CEkG,CD2CzB,AC3C0B,CD2C9B,EAAkC,CC3CAF,SAAS,CAAC/F,CAAtC,EAAyC;AHsDnD,AFDA,ASdA,QLKM,ADnBC,AKhEmD,CL8DpD,AMgBGsN,CFrDD,EFeE,AGDMtN,CJ4CLH,AInF+C,EDyB7C4E,AJuCA,CExBCmB,ED2CR,CAAWzB,ADnBA,KAAKlE,CMctB,EFrDQ,AFeiB,CD2CnB,AG1DoBqH,AEqDE,CLKD,CC3CC,GD2CtB,CG1D0B,AFeAzB,CD2CC5B,AG1DAlE,CAAzB,EAA4BuH,CFeR,CAAU,CAAV,AFwBX,CExBP,CD2CJ,CG1DoC,CAACtH,CAAnC,AJuCoC,EIvCE,CJuCjC,EAAoC,SIvCG;ALqEpD,AFDA,ESdEqN,MLKI,AIpFoD,ELiElD/L,EIvCE,AFeAsE,AGFSwD,ACwCP,CLKDtH,EDnBE,AKjE6C,AC+E3C,ELKT,AG1DQ,AEqDZ,CLKcsC,AG1DDzB,AJuCC,GAAR,ECmBF,AG1DI,AFeW,CAAC,CAAD,CEfE,AFeb,GAAiBqD,CAAjB,wBEfA;ALqEV,AFDA,MITK,EDnBE,CAFM,CIrCJ,CAFD,CFiBEJ,GFwBG,IAAI,IExBI,CAAC,AFwBA3F,CExBD,CAAX,GAAiBgG,CAAjB,WFwBO,KAA2B,GAA/B,EAAoC;AD8BjD,AFDA,ESfE,ELMC,GKNI,CDxCD,EDZE,AJuCA3E,CMaGO,CJpCD,AGJEmI,ACwCA,GNbC,AMaE,CAAb,CJpCa1E,CFuBC,AMaEzD,CAAC,ENbX,CMacuJ,EDxCE,GHId,CAAgB7K,IAAhB,CAAqBqF,QIoC7B,EAAyC/D,CJpCjC,AIoCkC,EDxCbwH,ACwC7B,EAA8C,WDxCJ,CAACrJ,CAAD,CAApB,CAAlB;ANyDN,AFDA,ISfIqN,INbG,CAFM,CErBJ,IIoCK,CNbD,AMaE9M,INbE,AMab,CAAgByM,INbE/M,QMaU,CAAC4B,CAAD,CAA5B,MNba,KAA2B,GAA/B,EAAoC;AD8BjD,AFDA,ESfG,MFpDG,AFgBC,AGLD,EL4BEP,EK5BI2I,CDXD,EJuCE,GAAG,CK5BG,EL4BX,CK5Bc,mBDXhB,ACWoBb,GAAJ,EAAS3J,GAAT,CAAa,UAACyK,CAAD,EAAInK,CAAJ,EAAU;AN0D7C,AFDA,ASfC,MJpCI,EFuBE,CAFM,CIrCL,ACWA,CJ8CN,GI9CYE,CDXDyE,AJuCA,IAAI,KAAKzE,OK5BS,GDXvB,ACW0B+J,CDXD,KHyDXtG,CDlBL,KAA2B,AK5BE,CDXP,ACWQ3D,CJ8C7C,AI9C4C,CL4BjC,AK5BL,CJ8CwB,CDlBiB;AD8BjD,AFDA,MIVI,IACE,ADnBEuB,AK5BA,EDXE,ECWIxB,CJ+CH4C,ADnBE,EIvCC,CAACC,AJuCC,AK5BE,GL4BV,AK5Ba2G,EDXX,GAAa,ACWG,CAACY,CAAD,CAAlB,CJ+CF,IAAwB,CG1DpB,IH0DJ,IACA,KAAKpI,IAAL,KAAc,IADd,IAEA,KAAKA,IAAL,CAAUxB,MAAV,GAAmB,CAHrB,EAIE;AFQN,AFDA,AShBAgN,MJpCI,ED8CE,ADtBC,CAFM,CIrCJ,ACWD,CDbA,CH+DIrJ,CC9CD,CGJGlC,CL4BD,CMYG,EJpCAuD,AGJE,CL4BD,CCsBG,AKRpB,CD1CqB,EJkDE,CDtBDrF,CK5BGL,GJkDGC,AC9CxB,KD8CmB,CAAWwE,IIlDb,CAAS,EL4Bb,GK5BI,EL4BuB,AK5BRvE,GL4BvB,CK5BQ,CL4B4B,CK5BPC,CAArB,CJkDE,CACf,AInDqCC,CAAxB,EAA2BC,EJmDnC6B,IAAL,CAAU,CAAV,EAAa/B,CADE,EAEf,IIpDa,CJoDR+B,AIpDL,IJoDA,CAAU,CAAV,EAAa9B,CAFE,CAAjB;AFQN,AFDA,IKpDG,IDiDG,EGhEE,AJuCAsB,GCyBGgD,EDzBE,GAAG,GCyBV,ADzBE,CCyBYL,QAAd;AFKN,AFDA,ASfA,MLYK,CAVD,CDfG,CMaEsJ,CDzCD,GJqDG,EIrDC,CAACxK,CJqDE,KAAKL,AKZpB,CAAuB6I,ODzCf,CAAoBpB,GCyC5B,EAAoC,CLYrB,IAAwB,KAA5B,EAAmC,MIrDtC,CACEpK,CADF,EAEEC,CAFF,EAGEiI,iBAAiB,CAAChI,iBAAD,CAHnB;AN0DR,AFDA,ESfE4M,MLYInJ,AGhEA,EEoDI,CAACoJ,EFpDA,GHgEG,MGhER,GEoDJ,CAAwB,8BAAxB,EAAwDU,SAAxD,GACE5I,IAAI,CAACe,KAAL,CAAW0H,UAAU,CAAC9B,WAAW,GAAGH,mBAAf,CAAV,GAAgD,GAA3D,IAAkE,GADpE;APiBF,AFDA,ESdE,ILWG,AKXGqC,ENfFhN,EItCE,ACcA,CHAN,AFwBO,CAACc,AMeI,EFrDF,CCcA,ACuCKsL,CDvCJ7J,GDdIgE,CJsCX,CAAa1F,EItCP,AEqDa,CAACwL,CFrDlB,CJsCF,CItCmB,CJsCChM,IExBZ,IFwBoB,AKxB1B,CAA0BqJ,CCuCjB,CNfoB,AMeI,ENfnC,EAAmCpJ,QAAQ,AMehC,CAAf,ENfkD,EAA9C,EAnBiB,CAoBjB,CKzBE,CACEhB,CADF,EAEEC,CAFF,EAGEiI,iBAAiB,CAAChI,iBAAD,CAHnB;ANuDR,AFDA,ESdE,ELWC,EClDC,AIuCIQ,GAAG,CJvCHmF,EEdE,AEqDI6H,KFrDC9K,CEqDK,CAAC+K,EJvCF,CEdT,EFcY,CEdC,GFcG7H,CIuCZ,CAAkB,GJvCV,CAAU,AIuClB,CJvCQ,AIuCpB,CJvCE,MEdM;ALqEV,AFDA,ESdE,IJvCE,AIuCI8H,ENfFlN,EItCG,AFcCsF,AGIF,CDpBA,AJwCC,AMeI,CNfH1E,EMeMoM,GFrDD,ACkBA1L,EHJI,CIuCG,CDnCd,ACmCe4L,CJvCD,CFwBhB,GAAkB,AMetB,CJvCyB9N,AFwBrB,KExBgB,CAAWwE,oBAAX,CAAgC,KAAK7B,OAAL,CAAa,CAAb,CAAhC,EAAiD,KAAKA,OAAL,CAAa,CAAb,CAAjD,CAAlB;AHuDJ,AFDA,ESdE,IJtCEoD,AFuBC,AMeGgI,CNjD4D,CAoChE,AKtBG,CAjBe,CAAhB,EDDI,AEqDI,GAAGH,EFrDF9K,AFeA,CAAC,CAAD,CAAX,CIsCmB,CFrDb,AEqDciL,CJtCH7H,EEfE,GEqDrB,IFrDQ,AFeoB,CAAChG,CAA3B;AHsDJ,AFDA,ESdE,IJtCE6F,AIsCIiI,IFrDC,CH+DP,GKVc,GJtCD,AIsCIF,CJtCH,CAAD,CAAX,EIsCoB,CJtCH5H,EIsCMqF,OJtCG,CAACpL,CAA3B,UDgDsB,AKVxB;APgBF,AFDA,ESdE,ILSwB,AC/CtB8D,AIsCIgK,EDpCF,KHFK,AGED,CHFE/J,AGEDmC,CCoCM,EJtCb,CAAY,AIsCI0H,CDpCd,CAAWrN,IAAX,ACoCoB,CDpCJ0J,ECoCOoB,KDpCvB,MHF8BzF,MIsClC,KJtC6C,CAAC,CAAD,CAA/B,GAAqC,OAArC,GAA+CA,WAAW,CAAC,CAAD,CAAtE;AHsDJ,AFDA,ESdEnF,GAAG,CNfD,AKjFsD,ACgGpDsN,IFtDE,AJuCA,KAAKjO,AMeX,CAAc,CAAd,ENfM,AMeW,CAAjB,EAAoB6N,ENfA,GMepB,EAA2BC,INfzB,EAA6B,AMe/B;APgBF,AFDA,ESdEnN,GAAG,CLQD,AC9CE,AIsCAS,ENfAT,GEvBK,AFuBF,CAACS,ECuBE,CC9CG8E,AIsCb,CJtCc,EIsCE,CLQDrD,AC9CE,CAAb,CFuBA,CEvBgBqD,CAAC,CD8CnB,ADvBkB,EEvBI,CIsCxB,IJtC6BV,EFuBzB,QEvBoB,CAAgBhF,MAApC,EAA4C0F,CAAC,EAA7C,EAAgD;AHsDtD,AFDA,ESdEvF,GAAG,CD3DD,AC2DEU,ELQA,AG9DA,AFgBA,AFuBAV,GAAG,CEvBG0F,AFuBFhF,CCuBC,CKRT,CAAa,CAAb,EAAgB,CAAhB,CNfI,CAAaL,AMeE6M,IJtCI,CIsCvB,EJtC0B,AIsCAC,CNfD,CCuBrB,EDvBwB,CEvBG/N,AFuB3B,CMeJ,CNf+BkB,CMIG,CAalC,CJxC0B,CAAWsD,IFuBE,GAAG3D,UAAX,EK5CU,CHqBf,AFuB6B,CEvBG,AFuBtD,EAAsDA,GEvBK4E,OFuBK,GEvBV,AFuBa,CEvBGU,AFuBtE,CEvBsD,CFuBgB,CEvBG,AFuBzE,CEvBsD,CAAhC,EAAuD,KAAKV,UAAL,CAAgBU,CAAhB,EAAmB,CAAnB,CAAvD,CAAtB;AHsDN,AFDA,QQ1E2C,EJoEnC,AG9DA,IH8DMzB,CG9DD2C,WH8Da,GAAG,KAAKrH,EG9D1B,GH8DqB,CAAW2E,mBAAX,CACnB,mBADmB,CAArB;AFQR,AFDA,ESbE,IDzCG,CCyCE,CJxCC,AFwBF,ECyBE,AGhEA,CEuDG3C,CJxCAsE,AFwBD,AMgBE,GLSC1B,AKTE,CAAb,CNhBatE,CMgBG0B,CAAC,GNhBT,AMgBYuJ,GJxCE,CAAChI,AFwBDzD,CCyBhB,CAAkB4E,KCjDf,EAAH,EAA2B,GDiDG,CAACxE,AKTrC,CLSM,ADzBF,CMgBqC8B,CLSD0C,ADzBA,AMgBE,EAA1C,EAA8C,QLSM,CAACvE,CAA/C,EAAkD,YAAM;AFMhE,AFDA,IQnH0D,ACsGtDS,EFzHA,CEyHG,CAACS,EJxCE0E,AFwBFnF,ECyBE,CDzBC,CAACS,GMgBR,CLSU,CAACyB,CKTK,CJxCC,CAAC,CAAD,AFwBb,CCyBE,ACjDA,EFwBc,CCyBD,ACjDIwD,EIwCvB,MNhBI,KExBgC,CAACpG,CAA/B,CDiDA;AFMV,AFDA,IOpEG,AEuDCU,EDvGsD,CCuGnD,CNhBA,AMgBCU,CNlBF,CC2BG,ACjDCyE,CD+CF,IDvBK,CMgBT,CACE/D,CAAC,GJzCc,AIyCXgM,CJzCY,CAAD,CAAX,GAAiB1H,EIwCvB,EAEEyH,MAAM,GJ1C4B,AI0CzBP,CJ1C0BrN,CAA/B,QI0Ce,CAAC6B,CAAD,CAAV,GAAgBiM,SAF3B,EAGED,QAHF,EAIER,UAAU,CAACxL,CAAD,CAAV,GAAgBiM,SAJlB;APeJ,AFDA,ESRG,CAtBiC,CDvFsB,AC+GxD,MLEM,ACjDEhK,AFwBFrD,GAAG,CAACS,GExBK,CAAC6C,GAAR,CAAY,CFwBd,GAAgB,SAAhB,SExBoC6B,WAAW,CAAC,CAAD,CAAjC,GAAuC,OAAvC,GAAiDA,WAAW,CAAC,CAAD,CAAxE;AHuDV,AFDA,MQtH0D,ELyFnD,EExBG;AHuDV,AFDA,IQvH0D,IJkHpD,AChDG,KDgDE,gBAAL;AFON,AFDA,EOnJ2BxD,AE2IzB,IJ7CK,CI6CA,CNtBD3B,ECyBE,CDzBC,AMsBEoB,CNtBDV,AMsBE,GLGCuD,AKHE,CAAb,EAAgB7C,CAAC,CNtBb,CACEf,CMqBcuK,ONrBN,GAAG,CADb,CCyBE,CAAyB,ADvBzBtK,IMoBN,EAAuCc,CAAC,CNpB1B,GAAGnB,AMoB2B,CLGP,EKHrC,EAAiD,KNpB3C,GAAwB,CAF1B,EAGE,CAACA,UAAU,GAAG,CAAd,KAAoB,KAAKP,KAAL,GAAaR,gBAAjC,CAHF,EAIE,CAJF;ADgCN,AFDA,IQ3DI,ACmDAc,ENjBC,CMiBE,CAACuN,CDnDCjL,GJsDC,KKHN,CLGU,CAACJ,CKHK,CAAhB,EDnDA,CJsDM,AItDcyH,GJsDD,IItDnB,CACE,IJqDI,CIrDClE,KAAL,CAAWzG,GAAX,CAAe,UAAC2J,GAAD;AN4DrB,AFDA,ISRI3I,EJ7CAqD,AGNiB,CCmDd,CAACmK,KJ7CG,AGNmB7E,CHMlBrF,CElBGsD,CCYkB,CHM7B,AGN8B5H,CHMlB,CI6CZ,CDnD0B,CAAQ,CCmDhB,KJ7CCmG,IGNgB7D,ACmDnC,IDnDkC,GHMJ,CAAC,CAAD,CAAlB,GAAwB,OAAxB,GAAkC6D,WAAW,CAAC,CAAD,CAAzD;AHuDJ,AFDA,ISRInF,EJ7CA,AF4BA,CMiBG,CDpD+B,ACoD9ByN,ENjBA,ECmBE,CC/CCtI,EF4BE9F,AKnCmCiC,ECoD5C,CLEU,CAAC4C,ADnBP,AKnC4C,CAAC7E,IHOjD,AF4BkB,AKnCgB,SJsD5B,UDnBN,EAAuC;AD2B3C,AFDA,IKrDG,AI6CCW,EJ3CF,AGVoC,CAAR,ACqDvB,CNjBDA,AKpCe,ACqDb0N,ELEC,CAHD,ADhBC,CAACjN,EMiBN,CAAW,CAAX,EAAc0M,GNjBZ,GAAgB,AMiBE,GAAG/L,CAAC,GAAGiM,ENjBzB,OMiBF;APUJ,AFDA,IQ9DqB,ACsDjBrN,CDtDE,CADF,CCuDG,CNjBDA,AMiBE2N,ELEA,CDnBC,CAAChN,EMiBN,CAAWuM,CNjBT,GAAW,CMiBb,EAAkBC,MAAM,GAAG/L,CAAC,GNjB1B,AMiB6BiM,SAA/B;APUJ,AFDA,IQ7DI,ACqDArN,GAAG,CNjBDA,AMiBE4N,CDrDCtL,ELoCA,CAACxB,EMiBN,GAN+C,CAO/C,ENlBE,CACE,EKrCJ,CAAoB8I,ELsCd7I,MAAM,CACJ,KAAKtB,IKvCb,CAAuC,CLuC/B,AKtCN,CLsCkBG,MAAZ,AKvC+B,CLuCZ,CKrCzB,WAFqC,EAGrC,UAHqC,EAIrC,SAJqC,EAKrC,MALqC,CAAvC;AN+DJ,AFDA,IQvDI,IJgDE,CIhDG0C,CLgCsB,GCgBpB,CDhBuBjD,IAAH,ICgBzB,CIhDF,CAAoBwK,GLgCUxK,IAAH,IKhC3B,CAAgC,UAAhC,EAA4C,CAA5C;ANyDJ,AFDA,IQvDI,AC+CAW,GAAG,CAACS,CD/CC6B,CJgDD,ADjBuB,CE9B7B,GD+CU6B,GDjBiC9E,AMgBzC,CLCY,CAAC+E,CKDG,CNhB6B,EK/B7C,CAAoByF,CJgDZ,CDjB0C,GMgBlD,CLCwB,KAAK7H,AIhD7B,CAAgC,EHChB,AF8BW,KCiBvB,EAAmC,AIhDvC,EAA2C,CAA3C;ANyDJ,AFDA,IQtDI,AC8CAhC,EJ9CA,CI8CG,CNjBwB,AMiBvBW,CNjBI,AK7BH4B,CHADoD,CF6B4D9F,CCkB1D,AKDN,GAAW,ELCAqC,AC/CA,AF4BC,CAAN,CAEElB,CE9BMmD,ED+CR,EC/CY,CD+CC,AC/CAc,EF4Bb,AMkBN,CJ9Cc,AF8BG,CAFX,AK5BN,CAA0B0E,CL8BN,GAFd,CE5BQxF,AF0BZ,EAKE9D,AK/BJ,CACE,CJ8CI,AC/CY,IGCXoF,EL8BK,GAAG,AK9Bb,CAAWzG,ELyBX,CKzBA,CL+BEsB,AK/Ba,OHDS,CFgCd,EK/BMqI,CL+BH,CEhCgBhE,CF0B7B,AKzBe,YHDC,EAAlB;AHwDJ,AFDA,ISRI3E,EJ9CA,AFiCC,AKjCgB,CLsBjB,AMwBG,CAACc,ELCC,AC/CD8E,GFiCG,AKjCmB+C,EHAjB,CGAoB,AC8C7B,CD9C8B3J,AC+C5BmF,CJ/CU,EGAc,CAAQ,AC+C5B,CAACe,CJ/CUP,II+Cf,CAAWvD,CAAC,ED/CqBE,CC+ClB,GD/CiB,AC+ChC,CJ/CU,CAAmBuE,EI+CP,GADxB,EJ9CY,AIgDVqH,CJhDqCvH,IIgDhC,GJhDK,AIgDF,CJhDV,CI8CA,EAGEwH,MAAM,GAAG/L,CAAC,GAAGiM,SAAb,GAAyB,CAH3B;APUJ,AFDA,ESJG,CAxCiC,CA0ClC,EJpDE,EFiCE,AKlCgC,ILkC1BpM,CEjCD,EGDqCK,GHChCoD,CGDoC,CAACrF,EHC1C,AFiCW,CEjCDuG,CGDiB,CLkCb,GEjCd,CAAP,CFiC0BnG,MAAL,CAAYG,MAAZ,CAAmB;ADuB5C,AFDA,IKtDG,EAED,AGJoC,CAAR,CAAT,EJgDb,ADdoC,IAAGP,IAAH,SAAGA,IAAH;ADwB5C,AFDA,IQzDqB,CAAf,CADF,ILmCwC,OAAcA,IAAI,KAAK,MAAvB;ADyB5C,AFDA,ESJE,EDpDE,ECoDIwO,ELLF,ADfsC,CAAnB,AKhChBtL,CLgCH,GCeK,KKKS,GAAGuI,MLLjB,EI/CF,CAA0BlB,ECoDI,GAAGe,aDpDjC,CAA6C,CAC3C,ICmDJ,aDpD+C,EAE3C,UAF2C,EAG3C,SAH2C,EAI3C,mBAJ2C,CAA7C;AN0DJ,AFDA,ESJE3K,ED/CE,CC+CC,CAACS,ENpBA,CK3BG8B,CJ0CD,EDfIrB,GCeC8C,AKKX,GAAgB,SLLV,AKKN,CLLwB,ADfE,CK3BxB,CAA0B6F,CL2BC,ECeA/H,GDfKrC,KK3BhC,CL2B2B,AK3BW,CL2BCG,CCejB,CAAiBN,CAAnC,EAAsC,CDff,CACvB,EK5BJ,CJ0C+CwC,CI1CG,CAAlD,SJ0C0C,CAAiBvC,CAAvD,EAA0D,YAAM;AFWxE,AFDA,ESJES,ED/CE,CC+CC,CAACU,GD/CG6B,CL2BD,CE/BN,CD8CQ,EDfClD,AMoBT,CACEwO,GLNU,ADfN,CCeO3L,KAAL,GAAa,ADfZ7C,AMqBK,EDhDZ,CAA0BwK,ACgDXuD,CNrBX,OMoBN,CJnDmB1K,CIqDjByK,CDjDA,CAAsC,ICiDhC,CJrDR,EAA6B,AIqDlBP,EDjDT,EAAiD,CJ0C3C,AI1CN,KCiDmB,CAACiB,YAAD,CAAV,GAA2BR,SAApC,GAAgD,CAFlD,EAGED,QAAQ,GAAG,CAHb,EAIER,UAAU,CAACiB,YAAD,CAAV,GAA2BR,SAA3B,GAAuC,CAJzC,EA7CkC,CAmDlC;APAF,AFDA,EQnDG,IHJC,ID8CK,AC9CDzH,AF8BA,CCcA,IC5CK,EF8BSvG,CE9BN,GF8BU,EE9BLqF,GF8BU,CE9Bf,CAAUmB,OAAV,CAAkBnD,EF8B1B,ME9BQ,CAAZ;AHyDJ,AFDA,ESCE1C,GAAG,CAACyN,EN3BE,CADuB,CCkBvB,ADlBF,KM4BJ;APCF,AFDA,ESCEzN,GAAG,CJxDD,AIwDE8N,GAAJ,CACED,CJzDK,IAAIzM,CAAC,GAAG,CAAb,EAAgBA,AIyDJ,CJzDK,EIyDFgM,CJzDK,KAAK1I,EIyDzB,EJzDoB,CAAU7E,AIyDJuN,MJzD1B,EAAsChM,AIyDJ,CJzDK,EAAvC,AIyDqC,CADvC,CJxD6C,CI0D3C+L,MAAM,GAAGP,UAAU,CAACiB,YAAD,CAAV,GAA2BR,SAFtC,EAGE,CAHF,EAIE,CAJF,EAKE,IAAIlJ,IAAI,CAACwI,EALX;APCF,AFDA,ESOE3M,GAAG,CAAC+N,ELjBA,AC7CA,AF6BA,EMiCJ,EJ9DQ3M,AF6BAH,CCgBC,AC7CA,IAAI2E,KAAT,AF6Bc,CAAC/F,CE7BC,KF6BZ,GAAoB,CAAxB,EAA2B,KCgB3B;AFYN,AFDA,ASOC,ULjBO,AC7CA,AF6BAoB,CK3BN,IJ2CWgD,AC7CAU,KF6BK,CAACxD,OE7BX,AF6BA,CE7BmBC,AF6BA,CE7BnB,ID6CA,CAAyB,AC7CA,IF6BLzB,CE7BUiF,CGEftF,CAArB,EL2ByB,AK3BDC,CAAxB,CL2BiC6B,CCgBI,ADhBZ,AK3BE,EL2BY,OE7BjC;AHyDR,AFDA,MQrDI,EHFG,CAFD,GD+CI,ADhBA,CK3BC,EHFE,GD6CC,AI3CEqE,CJ2CDvD,II3CJ,CJ2CD,AI3CY3C,CAAX,EJ2CY,AI3CED,CAAd,CAAP,SJ2CM;AFYV,AFDA,ASMAwN,ID3DG,MJ2CM,AC7CD,CD2CA,CDdE,CMgCG,CAAChC,CJ7DDnG,UI6DA,CAAb,EJ7DQ,CAAmBvD,CAAnB,KAAyB,KAAKwD,gBAA9B;AHyDR,AFDA,ASOAwH,QJ9DO,AI8DC,CAACC,CLjBD,EDhBE,IACE1M,KAAK,CAAC0B,CMgClB,CAAwB,ENhCZ,IACA1B,KAAK,CAAC0B,AM+BlB,EAAsC2M,EN/B1B,CAAWnO,MAAX,GAAoB,CADpB,GMgCZ,CN9BYF,AM8B2C,KN9BtC,CAAC0B,CM8BlB,EAAgE,CN9BpD,CAAW,CAAX,EAAc/B,CAAd,IM8BqD2O,CN9BjCtO,AM8BgC,EAAO,GN9BlC,CAAC2B,IAAN,CAAWhC,CAHjC,EAIE;ADwBZ,AFDA,ESOEqM,UAAU,EN7BA,CM6BGsC,CAAC,CAACC,EN7BD,CAAC3M,GM6BF,CAAS4M,IN7BZ,CAAcnO,AM6BxB,GN7BU,EAAmBV,CAAC,GAAGW,UAAvB,EAAmCV,CAAC,GAAGU,UAAvC,EAAmD,UAAnD,EAA+DmB,CAA/D;ADwBZ,AFDA,ESOEgL,MLlBI,AC5CA,EI8DI,CD7DR,AC6DSC,CN7BA,CCWA,AC5CA1H,AF2BD,MAMO,KCWX,CKkBJ,CJ9DI,AI8DoB,CJ9DDvD,CAAnB,IAAwB+C,IAAI,CAAC2B,GGCbzG,EHDQ,CAAW,CGCvC,EAA0B,EHDkBsF,KI8D5C,EAAqDoI,MJ9Dd,CAAmB3L,CAAnB,CI8DvC,GJ9D+D,AI+D7D+C,IAAI,CJ/DsB,AI+DrB2B,IJ/DiE,CI+DtE,CAAW6F,GJ/DT,OI+DmB,GAAG,GAAxB,IAA+B,GADjC;APLF,AFDA,ASQC,CAJD,GAMA,EDhEI,EHAE,ED2CE,AI3CE7B,GHACnF,CFgCC,CCWCN,AI3CE,GAAG,CLgCF,CAAC9C,CCWT,CAAY,CI3CGkE,GHAjB,CD2CmBnB,AC3CAlD,CAAnB,AFgCM,AKhCM,CLgCQpB,AKhCG+J,GHCrB,AF+BI,CKhCM,CLgCazK,CAAC,CCWxB,AI3C4BM,CHCvB+E,CF+BsB1E,IKhCjB,CAAyB,KLgC/B,EE/BJ,AF+BuCV,CE/BpB6B,AF+BqB,CE/BxC,CGDoCE,CLgCOrB,EE/BnB,CAAxB,AGDmC,GHE9B,IF8BD,CE9BM0E,CF8B6C,YE9BlD,AF8BD,CE9BoBvD,CAAnB,AF8BgEA,CAAjE,GE9ByB,CAD7B,GAEI,KAAKuD,aAAL,CAAmBvD,CAAnB,CAHN;AHwDN,AFDA,QKlDM,AGLqC,EJ4CnC,EDXG,CE5BAuD,EDuCEzC,AI5CwCZ,IAAI,CJ4CjD,AI5CkDjC,GJ4CrC,CI5CgC,EHK/C,CAAmB+B,CAAnB,CGL6D/B,GJ4C3D,ACtCA,CGNmC,IHM9BsF,aAAL,CAAmBvD,CAAnB,IAAwB,CAAxB,GACK,KAAKuD,aAAL,CAAmBvD,CAAnB,IAAwB,CAD7B,GAEI,KAAKuD,aAAL,CAAmBvD,CAAnB,CAHN;AHoDN,AFDA,ASSAgL,MJxDK,AGTsC,CAAzB,CAAd,ACiEI,CACLC,CLrBK,ADXC,CAZD,YM2CR,CACkB,sBADlB,EAEG2B,gBAFH,CAEoB,QAFpB,EAE8B,UAAUI,KAAV,EAAiB;APT/C,AFDA,ESWI9C,EJ1DD,EAED,AGXE,OAAOxB,ECmEM,GDnED,ACmEIsE,CDnEHjK,IAAI,ACmEI,CDnEHe,ACmEIgJ,KDnET,CAAW/J,ACmER,CAAagK,GDnED,CAAC/J,CCmE7B,KDnEwB,KAAgB0F,KAAK,CAACjK,MAAjC,CAAD,CAAZ;AN0DJ,AFDA,ESWIuM,EDnED,IJ4CG,EDXE,AMkCI,CAACC,ELvBF,CDXCnL,QCWN,GKuBF,CAAwB,INlCA,CAACrB,MAAjB,CMkCR,ENlCkC,AMkCIwO,CNlClC,EAAiC,KMkCrC,GAAiD,IAAjD;APTJ,AFDA,ASWG,CALH,SLlBQ,EDXEnN,GCWG8C,YAAL,CAAkB,ADXA,CAAC7C,ICWIU,GDXrB,CAAyB,CCWT,CAAWvC,CAA7B,EAAgC,KAAKuC,ADXTlC,KCWI,ADXL,CCWgBJ,CAA3C,ADXmC6B,CAAR,CCWmB,CDXL,WCWW;AFc5D,AFDA,ASWAgL,QAAQ,CACLC,GLxBO,EDXE,ICWE,CAACnK,ADXC,CAACV,GMkCjB,CLvBU,AKwBQ,GLxBK,ODXX,CACExB,GADF,EAEEV,CAAC,ECSL,CDTQW,IMgClB,EAEG+N,INlCW,GAAiB,EAFnB,EAGEzO,CAAC,GAAGU,CM+BlB,CAEoB,QNjCN,AM+Bd,EAE8B,CNjCCmB,CAAC,GAAG,EAHvB,GMoC4BgN,KAAV,EAAiB;APX/C,AFDA,ESaI9C,QLzBK,CAFD,AClCN,AGTA,CLsCS,CAND,EMsCO,GAAG8C,KAAK,CAACF,MAAN,CAAaC,KAA7B,CDtEe,EHSEzL,QAAnB,EAA6B;AHkD/B,AFDA,ESaI0J,IJ7DA,AGTA,IJ6CI,ACpCAxG,AF6BC,AMgCG,CAACyG,EDtEF,EHSE,GAAG,AGTA5G,KHSKf,AGTV,CAAWqF,CCsElB,CAAwB,CJ7DZ,CAAUlE,AGTf,GAAkBjG,IHSb,CAAkB8C,CGTvB,CAAyB,ACsEhC,EAAsC2L,IJ7D1B,CAAZ,GGTiC/M,ACsEjC,GAAiD,CDtEjB,ICsEhC;APXJ,AFDA,ASaG,CALH,GAOA,INlCO,AKvC6B,CLgB9B,MAuBO,AKvCiCA,ILuC7BJ,AKvCiC,CAAC7B,IAAL,KAAc,MLuC3B,CAACQ,EKvCE,ILuCnB,GAA0B,CAA9B,EAAiC;ADqB9C,AFDA,MKhDI,AGXgC,CAAzB,CJ8CL,AI9CF,ELwCIqB,CE7BC,EDmCE,ECnCEE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,AF6BA,CAACD,ECMnB,ECnCuBuD,GF6BrB,CE7BgB,AF6BS,CE7BC7E,MAA9B,EAAsCuB,CAAC,AF6BTzB,EE7B9B,EAA2C,CF6Bd,EAAQyB,CAAR,EAAc;ADqB/C,AFDA,AScAgL,IDzEG,EAED,EHSI,AI8DE,CACLC,CL5BK,ECnCEjL,AF6BA,CE7BC,EDmCE6C,CDNC7C,CE7BCwE,AF6BA,GAAG,CAAR,CE7BJ,CF6Be,AMiCrB,CJ9DsB,AI+DJ,UL5BV,CAAyB,KK2BjC,EAEGoI,KL7BoC,WK2BvC,CAEoB,QAFpB,EAE8B,UAAUI,KAAV,EAAiB;APd/C,AFDA,ESgBI5C,QJhEI,EDmCE,EDNE,AMmCI,CJhEH7G,EIgEM,CL7BL,AK6BV,CL7BWzC,ADNC,CAACV,ICMP,GAAa,CCnCf,CAAmBJ,CAAnB,IF6BI,CE7BqB,AF6BDpB,CCMtB,EDNE,EE7B0B4E,AF6BDtF,CAAC,GAAGW,UAAJ,EE7B7B,CF6B8CmB,CAAC,GAAG,EAA9C,EAAkD7B,CAAC,GAAGU,UAAtD;ADqBZ,AFDA,ESgBI4M,MJhEG,CAFD,CDqCG,CAFD,CDJG,CAFD,EE3BG,GIgEO,CNnCH;ADqBjB,AFDA,ASgBG,CALH,SLxBQ,ACnCA,IF6BI,CE7BClI,IF6BG,CAACnD,QE7BT,CAAmBJ,CAAnB,IF6BI,CE7BqB,AF6BDpB,GAApB,EE7B0B4E,AF6BDtF,CAAC,GAAGW,UAAJ,EE7B7B,CF6B8C,CAA1C,EAA6CV,CAAC,GAAGU,UAAJ,GAAiB,EAA9D;ADqBZ,AFDA,ASgBAmM,QJhEO,AIgEC,CACLC,ED7ED,CLyCS,WMmCX,CACkB,WD7ED3J,KC4EjB,EAEGsL,CD9ED,EAAyB,aC4E3B,CAEoB,QAFpB,EAE8B,UAAUI,KAAV,EAAiB;APhB/C,AFDA,ESkBI5C,ID9EA,EJ8CE,EDLG,AKzCD9I,CLmCA,ECWG,CKgCK,GAAG,CD9EH,GC8EZ,CLhCE,AI9Cc,OAAhB,EAAyB;AN8D7B,AFDA,ESkBImK,MJlEE,AF6BC,AKzCD,EJ8CE,GClCGlI,AGZAyD,EJ8CElG,GKgCO,ELhCZ,GAAa,GClCf,AGZA,CHYmBd,CAAnB,EDkCE,AI9CoB,CAAtB,CHYwB+C,IAAI,CAAC2B,KAAL,CAAW,KAAKnB,aAAL,CAAmBvD,CAAnB,IAAwB,KAAnC,IAA4C,KAApE;AHkDN,AFDA,ASkBG,CALH,KNhCK,AKzCA,CL7D+D,CE0E9D,AF8BF,ECGI,GCjCGuD,EDiCEvF,KAAL,CAAWmF,KCjCb,CAAmBnD,CAAnB,IDiCE,AChCA,CDgCuB,IAAvB,AChCKuD,aAAL,CAAmBvD,CAAnB,IAAwB,CAAxB,GACK,KAAKuD,aAAL,CAAmBvD,CAAnB,IAAwB,CAD7B,GAEI,KAAKuD,aAAL,CAAmBvD,CAAnB,CAHN;AHiDN,AFDA,ASkBAgL,QJ7DM,AI6DE,CACLC,CLjCK,GC7BG1H,UI6DX,CACkB,EJ9DZ,CAAmBvD,CAAnB,IACE,KAAKuD,GI4Db,EAEGqJ,QJ9DK,CAAmB5M,CAAnB,IAAwB,CAAxB,CI4DR,CAEoB,CJ7DP,KAAKuD,EI2DlB,EAE8B,SJ7DjB,CAAmBvD,AI6DQgN,CJ7D3B,IAAwB,AI6DP,CJ9DtB,CI8DuC,EJ5DnC,KAAKzJ,aAAL,CAAmBvD,CAAnB,CAHN;AH6CN,AFDA,ESoBIoK,IJ5DC,AGrBD,IAAI9I,ICiFQ,GAAG,CDjFH,GCiFZ,CDjFgB,MAAhB,EAAwB;AN+D5B,AFDA,ESoBImK,EJ5DD,EAED,AFmBE,ECIE,AI9CA,EL2CAzM,GK3CKiI,KCiFS,CNtCL,IACT,CACE,CK7CF,IAAqB,CAArB,CL4CA,EAEE,WAFF,EAGE,iBAHF,EAIE,UAJF,EAKE,SALF,EAME,mBANF,EAOE5G,QAPF,CAOW,KAAKpC,IAPhB,CAFF,EAUE;ADWN,AFDA,ASoBG,CALH,GAOA,EDnFK,ELoDCW,ECNEqD,CDMC,CAAC1C,IAAJ,CCNS,CAAC2C,CDMC,ECNT,CAAY,aDMd,ICNE,EAA+B,KAAKpB,KAApC;AFiBR,AFDA,ASsBA,QN/BMlC,ECNE,CDMC,CAACS,SAAJ,GAAgB,OAAhB;ADWN,AFDA,MIlEI,AIIA,ELqDET,EKrDE0C,CLqDC,CAAC9B,MKrDM,IAAI,CLqDd,GAAkB,CKrDpB,ELqDE,AKrDqB;ANgE3B,AFDA,ASsBAwL,ILrCG,EAED,EDIIpM,AKrDA,ACoFE,CAACqM,EJ/DP,AFgCO,CAACvL,CKrDCwH,OLqDL,CACE,EM8BR,CDpFM,ACoFkB,EJ/DhB,EFiCO,AKtDW,CAApB,ECoFN,EN9BoB7I,AM8BauO,MN9BlB,CAAYpO,MAAZ,CAAmB,EM8BlC,CAAkD,OAAlD,EAA2D,YAAM;APpBjE,AFDA,ESsBEiM,ELnCA,EC7BM,AGpBH,CCoFE,GN/B2B,IAAGxM,IAAH,SAAGA,IAAH;ADWlC,AFDA,ASsBC,CAFD,GLjCE,AKqCF,MNlCkC,OAAcA,IAAI,KAAK,MAAvB;ADYlC,AFDA,ASwBA,MJnEI,AGpBA,ELoD8B,CAAnB,CKpDPqD,CHoBCqD,AFgCwDlG,MAD3D,CKnDU,CHoBZ,AFiCIQ,GKrDY,KLqDJ,CKrDZ,ELqDe,AKrDS,CLmDtB,EAGEC,QAAQ,GAAG,EAHb;ADcN,AFDA,ASyBA,QNjCMN,AKvDA,GLuDG,CAACc,CKvDCyH,OLuDL,CACE,IKxDF,GLwDS,CKxDY,CAArB,GLwDc9I,MAAL,CAAYG,MAAZ,CAAmB;ADSlC,AFDA,MK3CI,AGpBC,ILuD6B,IEnCtB,AFmCyBP,IAAH,CEnCjB6C,KAAb,GFmCiC7C,IAAH;ADUlC,AFDA,ASwBA,IDvFG,ACuFGiP,IJnEA,EFkC4B,CCNhC,EC5BS,IFkCqCjP,GElC1C,CFkC8C,CMiC5B,GAAG+M,CNjC8B,KCN5C,EKuCsB,CAACC,INjCF,UMiCP,CAAwB,qBAAxB,CAA3B;APtBA,AFDA,ASwBAxB,MLvCI,EDK8B,CAAnB,CEjCP,AImEE,CLvCD1I,ADK8DtC,AMkC5DsB,IJnEEmD,CD4BT,CDIE,CMmCN,CNjCQjE,AMiCW,CLvCD,CAAd,GC5BI,GAAiB,AFkCT,EMiCIuB,CNjCD,CAFb,CEhCwBoE,CFmCtB1F,IMgCW,EAAc,ENhCjB,GAAG,EAHb,CEhCmB,EAAjB;AH6CR,AFDA,ESwBE,ELvCC,EKuCKiO,EN/BFvO,EEpCE,CFoCC,CAACY,EEpCEuE,CImEK,GAAGiH,KN/Bd,EEpCiB,CFoCC,AM+BI,CN/BtB,AM+BuBoC,CJnEH,KAAKvI,OImEX,CAAuB,KAAvB,CAAlB,MJnEwB,CAA0B,KAAK3B,SAA/B,CAAlB;AH6CR,AFDA,ESwBEiK,IN/BG,CAlI+D,CAoIhE,EErCI,CGtBN,ACwFS,CAACE,GJlECzK,MIkEX,CAAoB0K,GAApB,CAAwB,CJlElB,CAAkBvJ,UGtBNzC,ACwFlB,CJlEmC,CAAC,CAAD,CAA7B,EAAkCyC,EGtBxC,EAA4B,OHsBuB,CAAC,CAAD,CAA7C,EAAkD,YAAM;AH4ChE,AFDA,ESwBE,IDxFE,ACwFIwJ,IDxFAjM,EHsBE,EIkEM,GAAG0J,CJlEL,AGtBE,CHsBDlK,GGtBK,EHsBV,CIkEiB,CAACsM,CJlEL,EGtBnB,EAAyB,QCwFV,CJlET,AIkEgC,OAAvB,CAAjB;APtBF,AFDA,ESwBEG,MDxFI,EHsBG,AIkEC,CLxCR,AC5BM,AIoEGF,EDxFArG,OCwFT,CAAmBsG,GAAnB,CAAuB,CLxCjB,AIhDF,IAAsB,CAAtB,YCwFJ;APtBF,AFDA,ESwBEC,ILxCEtL,ADSA,AKzDC,IHsBG,AFmCAlD,AM+BE,CAACd,ELxCA,CAACmF,AC1BEc,CIkEZ,GLxCE,AKwCc,CLxCD,CDSb,EAAgB,CEnCG,GAAG,EIkExB,GJlE6BlG,KAAL,CAAWwE,gBD0BjC,IC1BsB,CAAgC,KAAK7B,OAAL,CAAa,CAAb,CAAhC,EAAiD,KAAKA,OAAL,CAAa,CAAb,CAAjD,CAAlB;AH4CR,AFDA,ESwBE4M,ELxCC,IDSG3O,EElCE,AIiEE,CN/BD,AM+BE4O,CN/BDjO,CM+BR,EJjEWuF,CFkCP,AM+BUtE,GN/BC,KM+Bf,WN/BI,EElCE,CAA4B0D,SAA5B;AH2CR,AFDA,ESwBEqJ,IDzFE,EL0DE3O,EElCE,AGxBA0C,ACyFE,CN/BD,AM+BEmM,CN/BDpO,MK1DM,ACyFd,GN/BI,AM+BewH,CDzFD,EL0DE,IK1DlB,EAAwB,CL0DtB,QM+BiC,CAACxG,QAAnB,CAA4BG,QAA5B,CAAnB;APtBF,AFDA,ESwBE+M,MN/BI3O,AK1DA,ECyFI,CN/BD,AM+BEgO,CN/BDpN,CK1DCyH,UL0DL,EK1DA,CL0DkB,CM+BtB,CAA0B,CN/BtB,AK1DqB,CAArB,MCyFJ,EAAoC,YAAM;APtB5C,AFDA,ISwBI,EDzFC,EHuBC,AFmCArI,AM+BE2O,GN/BC,CAAC7N,CEnCC,GIkEK,CAAC+N,GN/BX,CAAa,GM+Bf,EN/BoBvP,AM+BE,CN/BP,CEnCb,EFmCsB,GAAtB,EAA2Be,QAA3B,EAAqCC,QAAQ,GAAG,EAAhD;ADSN,AFDA,MSwBM2H,EN/BAjI,EEnCE,CFmCC,CAACc,GEnCGqF,KFmCP,CAAa,GM+BK,CAACrG,CN/BDP,CAAlB,EAAqBc,AM+BrB,CAAwBuB,GJlEtB,CAAwB,GFmC1B,CM+BA,CJlE+B0C,AFmCAhE,QAAQ,CEnCrC,EFmCwC,EAA1C;ADSN,AFDA,ISwBK,CAFD,CDxFA,EL2DEN,EK3DE0C,CL2DC,AM+BE,CN/BD9B,MK3DM,IAAI,CL2Dd,GAAkB,CAAlB,AK3DF,EAAuB;ANoE3B,AFDA,MGPK,AM+BCqH,ED1FA,EHwBE,GGxBGK,EJ+CI3G,ECvBA,IAAP,EAAa,CGxBf,AC0FkB,GAAGsG,CD1FD,CAApB,gBC0FuC,CAACrI,MAAnB,CAA0B,UAACqM,CAAD;APtBrD,AFDA,IGPG,EAED,AK7DG,ECyFgD,IJjE3C,GIiEkDA,CJjE9C7F,AIiE+C,KAAKxE,CJjE9C,GAAG,IIiE8B,CJjEzB8C,IAAL,CAAUP,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACC,MAAL,KAAgB,KAAKM,IAAL,CAAU7E,MAArC,CAAV,CAAb;AH4CV,AFDA,MSsBqD,CAA1B,CAArB;APpBN,AFDA,ISsBK,EDzFD,IAAI6C,EHyBE,IAAI0D,EGzBE,IHyBI,AGzBA,IHyBI,EGzBpB,EAAwB,CHyBC9B,SAAnB,EAA8B;AH4CxC,AFDA,QQnEM,KAAKiE,CHyBC,KAAKjE,MGzBX,GHyBM,CGzBe,CAArB,CHyBuB8B,MAAjB;AH4CZ,AFDA,ISqBIyF,EDxFC,GCwFI,EN5BP,GEnCU,mBFmCGtL,KAAb,EAAoB;ADStB,AFDA,ESqBG,CAPD,CDjFC,EL4DC,MEnCO,EFmCC,KAAKlB,IAAb;ADSJ,AFDA,ESqBE,IAAM2H,EN5BF,EEnCG,CI+DI,EN5BF,CM4BKoF,MN5BV,EM4BkB,CAACoC,aAAT,CAAuB,OAAvB,CAAd;APnBF,AFDA,ESqBExH,KAAK,CAAC8H,EN5BAvO,KAAK,AM4BX,GN5Bc,AM4BEqB,QAAhB,CN5BM;ADSR,AFDA,ESqBEoF,KAAK,CAACyH,EJ/DA,AFmCA,CK7DN,GH0BUtJ,GI+DV,CAAgBuJ,GAAhB,CAAoB,GJ/DC,GAAG,KAAKzI,EG1BdvD,KCyFf,GDzFA,EAAyB,QH0BD,CAA0B,KAAK4B,SAA/B,CAAlB;AH4CR,AFDA,ESqBE0C,IDzFE,CCyFG,CAAC+H,EJ/DA,AG1BArM,KH0BKsB,GG1BG,CCyFd,CAAkBoI,EDzFA,KH0BZ,CAAkBjH,AI+DE,CDzFxB,ACyFyB6J,EDzFA,QH0BQ,CAAC,CAAD,CAA7B,CI+DY,CJ/DsB7J,AI+DE2G,WJ/DS,CAAC,AI+DE,CJ/DH,AI+DIlK,CJ/DjD,EAAkD,KI+DF,CAApC,CAAlB,KJ/D8D;AH4ChE,AFDA,ESqBE0M,MN7BI,AK5DA,IH0BI,CFkCC,EK5DE,GH0BC,CAACpM,CG1BGkG,ACyFE,CAAC2G,GJ/DX,AFkCJ,GElCiB,KI+DrB,CDzFW,ACyFoBR,GDzFC,GAA5B,CH0BI,EI+DR;APnBF,AFDA,ESqBEA,IDzFG,IH0BI,AFkCDhO,CEpCA,AIiEG,CAACwO,GN7BC,GAAG,KM6Bd,CAAsBJ,GN7BhB,KM6BN;APnBF,AFDA,ESqBEJ,QJ/DM,AFkCA,CM6BG,CAACQ,WAAV,CAAsB/H,KAAtB;APnBF,AFDA,ASqBC,CAvBD,GAyBA,ED5FI,IAAItE,QAAQ,IAAI,MAAhB,EAAwB;ANuE5B,AFDA,ASuBA,QJlEM,AFkCA,AK5DA,KH0BK,AFkCA,EK5DE,KAAK2F,MH0BZ,IFkCA,EK5DO,GAAoB,EAA3B;ANuEN,AFDA,MQrEK,IH0BG,AFkCA9H,KAAK,GAAG,SAAR;ADWR,AFDA,ASuBA6L,QAAQ,CAACC,CJlED,AFkCA,IEjCE,KAAKpK,IIiEf,CAAwB,UJjEd,EIiEV,EJjEkC,AIiEI+L,KJjE5B,IACA,KAAK3M,EIgEf,CAAuD,CJhE7C,KAAc,CIgExB,EAAgE,CJjEtD,IAEA,KAAKA,EI+DuD,EJ/D5D,CAAUxB,MAAV,GAAmB,CAHrB,EAIE;AHyCV,AFDA,ESuBE,ID7FE,AC6FEuM,ID7FE1J,EH+BE,EI8DI,CAAC2J,CJ9DC7I,EG/BA,IAAI,EH+BI,GAAG,AG/BvB,EAAuB,AC6FrB,CAAwB,EJ9DEpE,KAAL,CAAWwE,II8DhC,EAAsCmJ,SAAtC,KJ9DqB,AI8D+B,CJ7D9C,KAAK1L,AI6Df,EAAgE,EJ7DtD,CAAU,CAAV,EAAa/B,CADE,EAEf,KAAK+B,IAAL,CAAU,CAAV,EAAa9B,CAFE,CAAjB;AHyCV,AFDA,ISuBI6M,INjCE,AK5DA,IHkCI,AI2DE,CNjCD,AMiCEC,ED7FA,EHkCExI,GGlCGyE,GL4DZ,EE1BI,CAAc9E,CI2DpB,CAAwB,GD7Ff,GHkCH,AGlCsB,EAA1B,IC6FF,EAAsCuJ,SAAtC,GAAkD,OAAlD;APrBJ,AFDA,ISuBInB,ED7FC,IL4DGrL,AMiCE,GAAG,ENjCA,GAAG,AMiCZ,SNjCI;ADYR,AFDA,ESuBG,CAHD,MAGO,CNjCD,EE1BE,IAAI,KAAKc,IAAL,CAAUxB,MAAV,GAAmB,CAAvB,EAA0B;AHsCpC,AFDA,ISuBIuM,ED9FA,IAAI1J,EC8FI,CAAC2J,CJ3DD,IGnCI,CHmCCnK,GGnCG,EHmCR,GAAa,AI2DrB,CD9FA,AC8FwB,ED9FA,UC8FxB,CJ3DQ,CI2D8B6K,SAAtC,GAAkD,MAAlD;APrBJ,AFDA,ISuBInB,INlCE,AK5DA,EC8FI,GNlCC,AMkCE,ED9FA,EC8FT,GD9FcrD,EL4DZ,UK5DO,GAAoB,EAA3B;ANyEN,AFDA,ESuBG,ID9FE,IL4DGhI,IE1BI,CF0BC,GE1BG,AF0BA,KE1BKc,IAAL,AF0BR,CE1BkBxB,MAAV,GAAmB,CAAvB,EAAyB;AHuCrC,AFDA,ASuBC,CARD,GDtFG,ACgGH,MNpCQ,ME1BM,IAAMyF,UAAS,GAAG,KAAKlG,KAAL,CAAWwE,oBAAX,CAAgC,KAAK7B,OAAL,CAAa,CAAb,CAAhC,EAAiD,KAAKA,OAAL,CAAa,CAAb,CAAjD,CAAlB;AHuCd,AFDA,ASyBA;APvBA,AFDA,QGZM,KAAK,GE1BG,IAAGuD,AF0BX,UE1BoB,CAAC3C,OAAV,MAAuB,IAA1B,EAA+B;AHwC7C,AFDA,ASwBAyJ,QAAQ,CAACC,CNpCD9L,CK5DN,IL4DW,GE1BG,AF0BA,KE1BK2B,AI8DrB,CAAwB,GNpChB,CE1BQ,GAAa,GGlCb8H,CCgGhB,EAAqCgE,KDhGnC,EAAwB,KHkCV,II8DhB,CAAsD,OAAtD,EAA+D,UAACC,CAAD,EAAO;APtBtE,AFDA,ESwBExC,IDhGE,IL4DI,CMoCG,GDhGCzB,ACgGEiE,CAAC,CJ9DA,AI8DCC,MDhGZ,ACgGU,CAASC,KAArB;APtBF,AFDA,ASwBC,CAFD,GAIA,IDlGM,KAAK,CHkCE,MGlCP;AN0EN,AFDA,AS0BA,QNvCM,EK3DE,EHkCG,CFyBA,IK3DI1J,ML2DT,aK3DE;AN0ER,AFDA,UKrCS,AFwBDlE,CE7CA,IF6CK,EExBE,CFwBC,GExBG,KAAK0B,CFwBhB,cExBW,IAAwB,KAA5B,EAAmC;AHuClD,AFDA,ASyBA,IAAI/B,IDlGE,EL4DE,EExBE,CGpCC,IHoCIgC,AI8DE,GAAG,CDlGd,CHoCI,GAAa,AI8DvB,SJ9DU;AHuCV,AFDA,ASyBA,IAAI/B,MJ9DK,AGpCD,ICkGM,GDlGCuG,ACkGE,KAAjB,eDlGQ;AN2ER,AFDA,ASyBA,IAAItG,INvCE,KAAK,AMuCE,GAAG,KAAhB,WNvCM;ADgBN,AFDA,AS0BAgM,QDpGM,ACoGE,CAACC,CJhED,AFwBA9L,GK5DG,EL4DE,GAAG,IK5DV,CCoGN,CAAwB,GNxChB,aMwCR,EAA0CyN,gBAA1C,CAA2D,QAA3D,EAAqE,UAACC,CAAD,EAAO;APxB5E,AFDA,ES0BE/N,QNxCM,AK5DA,KCoGO,EDpGA0G,CCoGGqH,CAAC,CAACC,MAAF,CAASW,OAAzB,IDpGM;AN4ER,AFDA,AS0BC,CAFD,OJ/DM,KAAK,cAAL;AHyCN,AFDA,AS0BAzC,QNzCM,AK5DA,ACqGE,CAACC,CJjED,GFwBG,CExBC,KAAKjN,AFwBX,IMyCN,CJjEY,AIiEY,CJjEDiH,YIiEvB,EJjEY,AIiE2B2H,CJjED,KAAK1J,SAA/B,CIiEZ,CAAwD,EJjEA,GAAhD,EAAqD,CIiE7D,EAAkE,UAAC2J,CAAD,EAAO;APxBzE,AFDA,ES0BE9N,QNzCMI,AK5DA,EHoCE,AIiEE,GNzCC,AMyCE0N,CAAC,CJjED/L,AGpCAP,ACqGEuM,CNzCD,IExBN,CIiEK,CAASW,CJjED,EFwBf,IK5DA,ACqGN,SJjEQ;AHyCV,AFDA,AS0BC,CAFD,KD5GI,IH6CK,AFwBD,CE1BA,MAEO;AHyCf,AFDA,AS0BAzC,IDrGG,ELgCC,AK9BF,ECmGM,CAACC,GJjEC,KAAKnK,KAAL,CIiEV,CAAwB,CJjED,WIiEvB,EJjEU,AIiE4B8L,gBAAtC,CAAuD,QAAvD,EAAiE,UAACC,CAAD,EAAO;APxBxE,AFDA,ES0BE7N,QJjEO,CIiEE,GAAG6N,CAAC,CAACC,MAAF,CAASW,OAArB;APxBF,AFDA,AS0BC,CAFD,GAIA,EN5CI,OAAOtO,KAAP;ADkBJ,AFDA,AS4BA,IN5CG,MExBK;AH0CR,AFDA,AS4BA,WDxGE,oBAAWqB,QAAX,EAAqB;AN8EvB,AFDA,MQ5EI,EHmCE,KAAK,kBAAL;AH2CN,AFDA,AS4BO,MDxGH,GCwGYY,CJrER,AGnCEyH,CL2DR,GExBU9E,IGnCM,GAAG,CCwGd,CAAuBvD,EJrEP,CGnCGuG,EHmCA,CFwBfnI,EM6CJ,CN7CL,CExB6BsG,AIqES2I,CN7CxB3P,CAAd,EAAiBC,AM6CZ,CN7CL,CM6C4C,CN7CxBmC,AK3DD,CAAoBwI,CHmCf,EAAlB,CGnCa,CACf,KL0DJ,EAAiC9I,CAAjC,EAAoC,AK1D/BzB,KAAD;AN6EN,AFDA,ES4BE,IN7CEK,AM6CI4F,EDxGF,CL2DC,CExBC,AFwBAnF,CM6CK,GAAGwH,CJrEHjE,AGnCIrE,IL2Db,CK3DkB,CAACiC,CL2DH,KExBZ,CAAkBuD,CGnCT,EL2Db,CM6C8B,CAACU,CDxGCjE,KHmCC,CAAC,AIqEtB,CJrEqB,AIqEMA,CJrEnC,AGnCF,EHmCoCuD,KIqE1B,CAAd,KJrEmD,CAAC,CAAD,CAA7C,EAAkD,YAAM;AH2ChE,AFDA,ES4BE,IDzGI,ACyGEwD,CD1Ga,CAAjB,CAFmB,AC4GZ,CDtGP,EHiCM,AIqEIvD,KAAK,CJrEL,AIqEM6C,CJrEL/F,KAAL,GAAa,SIqEe,CAACrC,GJrE7B,GIqES,CAAL,CAAiCkO,IAAjC,CAAsC,IAAtC,CAAZ;AP1BF,AFDA,ES4BEpF,GAAG,CN9CD,AM8CE/C,IJrEG,AFuBDlE,CEzBA,AIuEH,CAAH,GAAauN,IAAb,EN9CiB,KAAK,UAApB,EAAgC;ADoBpC,AFDA,ES4BEhE,IDvGE,ELyDEjL,EEvBE,AGlCAiK,CLyDC,CAACvJ,IM8CM,CAACZ,CDvGb,ELyDE,AKzDY,CLyDCR,AM8CjB,CN9CkB,AM8CEqJ,GN9CC,AM8CrB,CN9CiB,GAAQ,KAAKvH,CAA1B,EAA6B7B,CAAC,GAAG,CAAjC,EAAoC,CAApC,EAAuC,EAAvC;ADoBN,AFDA,ES4BEwL,IN9CG,CAFD,CKvDE,KLyDK,AKzDA7C,ACuGE,YDvGP,CAAkBpI,CCuGJ8B,GDvGd,CAAuBqI,ICuGhB,IDvGP,UCuG0BgF,IAAnB,OAAX;AP1BF,AFDA,AS4BC,QJtEK,AFwBAjP,AKzDA,GLyDG,CAACU,CExBC,AGjCAyH,OLyDL,CAAa7I,CExBb,AFwBc,GAAG,CAAjB,CKzDA,CLyDoBC,CAAC,CKzDC,ELyDE,CAAJ,EKzDO4I,CLyDC,KAAK/G,CAAjC,EAAoC,EAApC,EAAwC,CAAxC,AKzDsB,CAAoBxB,MAApB,CAA2B,UAACG,CAAD;AN6EvD,AFDA,MGlBK,IExBG,AGlC+C,IHkC3C,GGlCkDkK,EHkC7C1D,IAAL,CAAU,CGlCgD,IHkC3CjC,CGlCgDvE,CAApB,OHkC3C,CAAJ,EAA+B;AH4CvC,AFDA,AS4BO,IN9CJ,IK3DoD,CAA3B,ACyGZ0C,CDzGV,EHmCI,KAAKP,KAAL,AIsEH,CAAuBN,EJtEP,MIsEhB,EAAiCqN,IAAjC,EAAuC,GJtEpC;AH4CV,AFDA,ES4BE,IAAMrJ,EDzGFqE,GCyGO,CJtEH,EIsEMhC,EDzGF,CHmCCzB,AGnCA3E,KAAT,CAAesI,QAAf,CAAwBF,ACyGI,CAACpE,EJtEzB,CAAwB,IGnC5B,ACyGU,CJtEuBvB,AIsEI1C,QAA3B,CJtEN,AIsER;AP1BF,AFDA,ES4BE,IAAM+G,EDzGFsB,CCyGK,CJtEF,CAHD,CIyEM7E,IDzGA,CHmCC,AGnCAgF,ACyGI,CAACnC,MDzGd,YCyGgC,CAACpI,MAApB,CAAL,CAAiCkO,IAAjC,CAAsC,IAAtC,CAAZ;AP1BF,AFDA,ES4BEpF,GAAG,CDzGA,ACyGC/C,CD9GF,IL+DF,AM+CG,CJtEK,AIsER,CDzGS,ECyGIqJ,IAAb,gBN/CejP,GAAf,EAAoBV,CAApB,EAAuBC,CAAvB,EAA0B;ADqB5B,AFDA,ES4BE2L,IN/CElL,EK1DE,CL0DC,CAACS,EEvBE,IIsEM,CJtEDsE,AIsEEjF,EN/Cb,EM+CF,CN/CkB,AM+CE6I,GAApB,EJtEQ,IAAmB,AFuBzB,CEvBM;AH4CV,AFDA,ES4BEwC,IN/CEnL,EK1DE,CL0DC,CAACU,CM+CG,CAACkB,MN/CR,CAAatC,CAAC,AM+CP,CAAT,CAAoBQ,CN/CD,CAAjB,EAAoBP,AM+CtB,CN/CuB,AM+CE0P,GN/CC,CAAxB,AM+CF,EN/C6B,CAA3B,EAA8B,CAA9B;ADqBJ,AFDA,ES4BEjE,EN/CC,IK1DG,IHkCI,AGlCEnJ,CCyGC,GJvEC,CGlCG,GAAG,CHkCDkD,IGlCMhB,ECyGLnC,IJvEN,GAAkB,CIuEnB,IJvEwBkD,KGlCjB,CAAyB,IHkCnC,AIuEsBmK,EJvEiB,CGlC7B,CAAd,ACyGO,OAAX;AP1BF,AFDA,AS4BC,EAED,MD3GM,IAAM5E,EHkCA,KAAKnI,GGlCK,EHkCV,CGlCa,EHkCA,GGlCKoI,YHkClB,CGlCa,CAAmB1I,QAAnB,CAAnB;AN+EN,AFDA,AS8BA,QD3GM,IAAM2I,EHkCA,KAAKxF,CGlCG,GAAG,IAAIsF,EHkCf,GAAkB,CAAlB,IGlCW,CAAe,IAAf,EAAqB,MAArB,EAA6BxI,KAA7B,CAAjB;AN+EN,AFDA,AS8BA,QD3GM,IHkCK,CAHD,AG/BCqG,MHkCM,MGlCX,CAAkBpI,IAAlB,CAAuByK,QAAvB;AN+EN,AFDA,QQ7EM1I,KAAK,CHkCC,AGlCAsI,KHkCKjI,GGlCX,CAAeqI,CHkCT,GAAa,IGlCnB,cHkCM;AH6CZ,AFDA,MQ7EK,MHkCM;AH6CX,AFDA,AS6BA2E,ID1GG,EAED,ACwGI,CAACC,GJxEE,GIwET,CAAcC,CNnDCjQ,GMmDf,CAAmB,SAAnB,EAA8B;AP3B9B,AFDA,ES4BgCkQ,QAAQ,EAAE,CAAC,WAAD;AP1B1C,AFDA,AS2B8B,CAA9B,SJvEQ;AH8CR,AFDA,AS2BAH,MAAM,CAACC,MAAP,CAAcG,iBAAd,CAAgC,YAAM;APzBtC,AFDA,ES2BEC,MJxEI,GGjCJ,ACyGS,CAAC,cAAD,EAAiBtE,IDzGdtL,KAAZ,EAAmB,GCyGV,EAAiC,CAAjC,CAAT;APzBF,AFDA,ES2BE4P,IDzGE,IHiCI,CGjCCrH,ACyGE,CAAC,GJxECzB,QGjCT,GAAoB,ACyGb,EAAiByE,GDzGChD,KHiCrB,MIwEG,CDzGa,CAAkBtI,ACyGE,CAAjC,CAAT,IDzGsB,CAAyB,UAACG,CAAD;ANgFjD,AFDA,ES2BEyP,MD1G+C,EHkCzC,CIwEG,CAACrE,GD1G4CpL,CAAC,KAAKJ,AC0GnD,CAAT,ID1G+C;ANiFjD,AFDA,AS2BC,CAJD,GAKA,EJhKI,AGoD6C,CAAzB,CAApB;ANkFJ,AFDA,IK7CG,EGnCCA,KAAK,CAAC2B,IAAN,CAAWiD,WAAX,CAAuB5E,KAAvB;ANkFJ,AFDA,AS2BAyM,MD3GI,EC2GI,CAACC,ED3GAlE,YC2GT,CAAwB,CD3GpB,CAAoBrI,IAApB,CAAyBH,KAAzB,GC2GJ,EAAyCqO,gBAAzC,CAA0D,OAA1D,EAAmE,YAAM;APzBzE,AFDA,ES2BEyB,ED3GC,EAED,YCyGgB;APzBlB,AFDA,AS2BC,CAFD;APvBA,AFDA,AS2BArD,EJrUyBzK,MIqUjB,CAAC0K,cAAT,CAAwB,mBAAxB,EAA6C2B,gBAA7C,CAA8D,OAA9D,EAAuE,YAAM;APzB7E,AFDA,ES2BE0B,iBAAiB;APzBnB,AFDA,AS2BC,CAFD,UD1GE,IHiCajL,eGjCH9E,KAAV,EAAiB2B,IAAjB,EAAuB;ANmFzB,AFDA,MQjFI,IAAIA,IAAI,CAACmC,aAAL,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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const map = `\n____________________________________\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb__\n_bbw______________aa____________bb__\n_bbw______________aappppppppppa_bb__\n_bbw______________aappppppppppaaaaaS\n_bbw______________aappppppppppaaaaaE\n_bbw______________aa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbw__ooooooooooooaa________________\n_bbwwwooooooooooooaa________________\n_bbappoooopppppppoaa________________\n_bbappoooopppppppoaa________________\n_bbappooooooooooaaaa___pppppp_______\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwoooooooooooXaaaaaaaaaaaaaaaaaS\n_bbwwwooooooooooooaaaaaaaaaaaaaaaaaE\n_bbwwwooooooooooooaa___pppppp_______\n_bbwwwooooooooooooaa________________\n_bbaaa____________aa________________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbaaaaaaaaaaaaaaaaaa_______________\n_bbw_____________aaaaa______________\n_bbw______________aaaaa_____________\n_bbw______________aaaaa_____________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_bbw________________________________\n_ESw________________________________\n`;\n\nexport const mapDirection = `\n____________________________________\nwawwwwwwwwwwwwwwwwaawwwwwwwwwwwwwa__\neaaeeeeeeeeeeeeeeeaaeeeeeeeeeeeean__\n_sna______________sn____________sn__\n_sna______________aahhhhhhhhhha_sn__\n_sna______________aahhhhhhhhhhaaaaaa\n_sna______________aahhhhhhhhhhaaaaaa\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_sna______________sn________________\n_aaaaa____________sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh____hhhhhha_sn________________\n_aaahh__________aaaa___vvvvvv_______\n_snaaa____________sn___vvvvvv_______\n_snaaa___________aaawwwaaaaaawwwwwwa\n_snaaa____________aaeeeaaaaaaeeeeeea\n_snaaa____________sn___vvvvvv_______\n_snaaa____________sn________________\n_snaaa____________sn________________\n_aaawwwwwwwwwwwwwwana_______________\n_aaaeeeeeeeeeeeeeeeaa_______________\n_sna_____________aaaaa______________\n_sna______________aaaaa_____________\n_sna______________aaaaa_____________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_sna________________________________\n_aaa________________________________\n`;\n\nexport default map;\n","/**\n * Represents a single instance of EasyStar.\n * A path that is in the queue to eventually be found.\n */\nmodule.exports = function() {\n    this.pointsToAvoid = {};\n    this.startX;\n    this.callback;\n    this.startY;\n    this.endX;\n    this.endY;\n    this.nodeHash = {};\n    this.openList;\n};","/**\n* A simple Node that represents a single tile on the grid.\n* @param {Object} parent The parent node.\n* @param {Number} x The x position on the grid.\n* @param {Number} y The y position on the grid.\n* @param {Number} costSoFar How far this node is in moves*cost from the start.\n* @param {Number} simpleDistanceToTarget Manhatten distance to the end point.\n**/\nmodule.exports = function(parent, x, y, costSoFar, simpleDistanceToTarget) {\n    this.parent = parent;\n    this.x = x;\n    this.y = y;\n    this.costSoFar = costSoFar;\n    this.simpleDistanceToTarget = simpleDistanceToTarget;\n\n    /**\n    * @return {Number} Best guess distance of a cost using this node.\n    **/\n    this.bestGuessDistance = function() {\n        return this.costSoFar + this.simpleDistanceToTarget;\n    }\n};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","module.exports = require('./lib/heap');\n","/**\n*   EasyStar.js\n*   github.com/prettymuchbryce/EasyStarJS\n*   Licensed under the MIT license.\n*\n*   Implementation By Bryce Neal (@prettymuchbryce)\n**/\n\nvar EasyStar = {}\nvar Instance = require('./instance');\nvar Node = require('./node');\nvar Heap = require('heap');\n\nconst CLOSED_LIST = 0;\nconst OPEN_LIST = 1;\n\nmodule.exports = EasyStar;\n\nvar nextInstanceId = 1;\n\nEasyStar.js = function() {\n    var STRAIGHT_COST = 1.0;\n    var DIAGONAL_COST = 1.4;\n    var syncEnabled = false;\n    var pointsToAvoid = {};\n    var collisionGrid;\n    var costMap = {};\n    var pointsToCost = {};\n    var directionalConditions = {};\n    var allowCornerCutting = true;\n    var iterationsSoFar;\n    var instances = {};\n    var instanceQueue = [];\n    var iterationsPerCalculation = Number.MAX_VALUE;\n    var acceptableTiles;\n    var diagonalsEnabled = false;\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array|Number} tiles An array of numbers that represent\n    * which tiles in your grid should be considered\n    * acceptable, or \"walkable\".\n    **/\n    this.setAcceptableTiles = function(tiles) {\n        if (tiles instanceof Array) {\n            // Array\n            acceptableTiles = tiles;\n        } else if (!isNaN(parseFloat(tiles)) && isFinite(tiles)) {\n            // Number\n            acceptableTiles = [tiles];\n        }\n    };\n\n    /**\n    * Enables sync mode for this EasyStar instance..\n    * if you're into that sort of thing.\n    **/\n    this.enableSync = function() {\n        syncEnabled = true;\n    };\n\n    /**\n    * Disables sync mode for this EasyStar instance.\n    **/\n    this.disableSync = function() {\n        syncEnabled = false;\n    };\n\n    /**\n     * Enable diagonal pathfinding.\n     */\n    this.enableDiagonals = function() {\n        diagonalsEnabled = true;\n    }\n\n    /**\n     * Disable diagonal pathfinding.\n     */\n    this.disableDiagonals = function() {\n        diagonalsEnabled = false;\n    }\n\n    /**\n    * Sets the collision grid that EasyStar uses.\n    *\n    * @param {Array} grid The collision grid that this EasyStar instance will read from.\n    * This should be a 2D Array of Numbers.\n    **/\n    this.setGrid = function(grid) {\n        collisionGrid = grid;\n\n        //Setup cost map\n        for (var y = 0; y < collisionGrid.length; y++) {\n            for (var x = 0; x < collisionGrid[0].length; x++) {\n                if (!costMap[collisionGrid[y][x]]) {\n                    costMap[collisionGrid[y][x]] = 1\n                }\n            }\n        }\n    };\n\n    /**\n    * Sets the tile cost for a particular tile type.\n    *\n    * @param {Number} The tile type to set the cost for.\n    * @param {Number} The multiplicative cost associated with the given tile.\n    **/\n    this.setTileCost = function(tileType, cost) {\n        costMap[tileType] = cost;\n    };\n\n    /**\n    * Sets the an additional cost for a particular point.\n    * Overrides the cost from setTileCost.\n    *\n    * @param {Number} x The x value of the point to cost.\n    * @param {Number} y The y value of the point to cost.\n    * @param {Number} The multiplicative cost associated with the given point.\n    **/\n    this.setAdditionalPointCost = function(x, y, cost) {\n        if (pointsToCost[y] === undefined) {\n            pointsToCost[y] = {};\n        }\n        pointsToCost[y][x] = cost;\n    };\n\n    /**\n    * Remove the additional cost for a particular point.\n    *\n    * @param {Number} x The x value of the point to stop costing.\n    * @param {Number} y The y value of the point to stop costing.\n    **/\n    this.removeAdditionalPointCost = function(x, y) {\n        if (pointsToCost[y] !== undefined) {\n            delete pointsToCost[y][x];\n        }\n    }\n\n    /**\n    * Remove all additional point costs.\n    **/\n    this.removeAllAdditionalPointCosts = function() {\n        pointsToCost = {};\n    }\n\n    /**\n    * Sets a directional condition on a tile\n    *\n    * @param {Number} x The x value of the point.\n    * @param {Number} y The y value of the point.\n    * @param {Array.<String>} allowedDirections A list of all the allowed directions that can access\n    * the tile.\n    **/\n    this.setDirectionalCondition = function(x, y, allowedDirections) {\n        if (directionalConditions[y] === undefined) {\n            directionalConditions[y] = {};\n        }\n        directionalConditions[y][x] = allowedDirections;\n    };\n\n    /**\n    * Remove all directional conditions\n    **/\n    this.removeAllDirectionalConditions = function() {\n        directionalConditions = {};\n    };\n\n    /**\n    * Sets the number of search iterations per calculation.\n    * A lower number provides a slower result, but more practical if you\n    * have a large tile-map and don't want to block your thread while\n    * finding a path.\n    *\n    * @param {Number} iterations The number of searches to prefrom per calculate() call.\n    **/\n    this.setIterationsPerCalculation = function(iterations) {\n        iterationsPerCalculation = iterations;\n    };\n\n    /**\n    * Avoid a particular point on the grid,\n    * regardless of whether or not it is an acceptable tile.\n    *\n    * @param {Number} x The x value of the point to avoid.\n    * @param {Number} y The y value of the point to avoid.\n    **/\n    this.avoidAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] === undefined) {\n            pointsToAvoid[y] = {};\n        }\n        pointsToAvoid[y][x] = 1;\n    };\n\n    /**\n    * Stop avoiding a particular point on the grid.\n    *\n    * @param {Number} x The x value of the point to stop avoiding.\n    * @param {Number} y The y value of the point to stop avoiding.\n    **/\n    this.stopAvoidingAdditionalPoint = function(x, y) {\n        if (pointsToAvoid[y] !== undefined) {\n            delete pointsToAvoid[y][x];\n        }\n    };\n\n    /**\n    * Enables corner cutting in diagonal movement.\n    **/\n    this.enableCornerCutting = function() {\n        allowCornerCutting = true;\n    };\n\n    /**\n    * Disables corner cutting in diagonal movement.\n    **/\n    this.disableCornerCutting = function() {\n        allowCornerCutting = false;\n    };\n\n    /**\n    * Stop avoiding all additional points on the grid.\n    **/\n    this.stopAvoidingAllAdditionalPoints = function() {\n        pointsToAvoid = {};\n    };\n\n    /**\n    * Find a path.\n    *\n    * @param {Number} startX The X position of the starting point.\n    * @param {Number} startY The Y position of the starting point.\n    * @param {Number} endX The X position of the ending point.\n    * @param {Number} endY The Y position of the ending point.\n    * @param {Function} callback A function that is called when your path\n    * is found, or no path is found.\n    * @return {Number} A numeric, non-zero value which identifies the created instance. This value can be passed to cancelPath to cancel the path calculation.\n    *\n    **/\n    this.findPath = function(startX, startY, endX, endY, callback) {\n        // Wraps the callback for sync vs async logic\n        var callbackWrapper = function(result) {\n            if (syncEnabled) {\n                callback(result);\n            } else {\n                setTimeout(function() {\n                    callback(result);\n                });\n            }\n        }\n\n        // No acceptable tiles were set\n        if (acceptableTiles === undefined) {\n            throw new Error(\"You can't set a path without first calling setAcceptableTiles() on EasyStar.\");\n        }\n        // No grid was set\n        if (collisionGrid === undefined) {\n            throw new Error(\"You can't set a path without first calling setGrid() on EasyStar.\");\n        }\n\n        // Start or endpoint outside of scope.\n        if (startX < 0 || startY < 0 || endX < 0 || endY < 0 ||\n        startX > collisionGrid[0].length-1 || startY > collisionGrid.length-1 ||\n        endX > collisionGrid[0].length-1 || endY > collisionGrid.length-1) {\n            throw new Error(\"Your start or end point is outside the scope of your grid.\");\n        }\n\n        // Start and end are the same tile.\n        if (startX===endX && startY===endY) {\n            callbackWrapper([]);\n            return;\n        }\n\n        // End point is not an acceptable tile.\n        var endTile = collisionGrid[endY][endX];\n        var isAcceptable = false;\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (endTile === acceptableTiles[i]) {\n                isAcceptable = true;\n                break;\n            }\n        }\n\n        if (isAcceptable === false) {\n            callbackWrapper(null);\n            return;\n        }\n\n        // Create the instance\n        var instance = new Instance();\n        instance.openList = new Heap(function(nodeA, nodeB) {\n            return nodeA.bestGuessDistance() - nodeB.bestGuessDistance();\n        });\n        instance.isDoneCalculating = false;\n        instance.nodeHash = {};\n        instance.startX = startX;\n        instance.startY = startY;\n        instance.endX = endX;\n        instance.endY = endY;\n        instance.callback = callbackWrapper;\n\n        instance.openList.push(coordinateToNode(instance, instance.startX,\n            instance.startY, null, STRAIGHT_COST));\n\n        var instanceId = nextInstanceId ++;\n        instances[instanceId] = instance;\n        instanceQueue.push(instanceId);\n        return instanceId;\n    };\n\n    /**\n     * Cancel a path calculation.\n     *\n     * @param {Number} instanceId The instance ID of the path being calculated\n     * @return {Boolean} True if an instance was found and cancelled.\n     *\n     **/\n    this.cancelPath = function(instanceId) {\n        if (instanceId in instances) {\n            delete instances[instanceId];\n            // No need to remove it from instanceQueue\n            return true;\n        }\n        return false;\n    };\n\n    /**\n    * This method steps through the A* Algorithm in an attempt to\n    * find your path(s). It will search 4-8 tiles (depending on diagonals) for every calculation.\n    * You can change the number of calculations done in a call by using\n    * easystar.setIteratonsPerCalculation().\n    **/\n    this.calculate = function() {\n        if (instanceQueue.length === 0 || collisionGrid === undefined || acceptableTiles === undefined) {\n            return;\n        }\n        for (iterationsSoFar = 0; iterationsSoFar < iterationsPerCalculation; iterationsSoFar++) {\n            if (instanceQueue.length === 0) {\n                return;\n            }\n\n            if (syncEnabled) {\n                // If this is a sync instance, we want to make sure that it calculates synchronously.\n                iterationsSoFar = 0;\n            }\n\n            var instanceId = instanceQueue[0];\n            var instance = instances[instanceId];\n            if (typeof instance == 'undefined') {\n                // This instance was cancelled\n                instanceQueue.shift();\n                continue;\n            }\n\n            // Couldn't find a path.\n            if (instance.openList.size() === 0) {\n                instance.callback(null);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            var searchNode = instance.openList.pop();\n\n            // Handles the case where we have found the destination\n            if (instance.endX === searchNode.x && instance.endY === searchNode.y) {\n                var path = [];\n                path.push({x: searchNode.x, y: searchNode.y});\n                var parent = searchNode.parent;\n                while (parent!=null) {\n                    path.push({x: parent.x, y:parent.y});\n                    parent = parent.parent;\n                }\n                path.reverse();\n                var ip = path;\n                instance.callback(ip);\n                delete instances[instanceId];\n                instanceQueue.shift();\n                continue;\n            }\n\n            searchNode.list = CLOSED_LIST;\n\n            if (searchNode.y > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    0, -1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y-1));\n            }\n            if (searchNode.x < collisionGrid[0].length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    1, 0, STRAIGHT_COST * getTileCost(searchNode.x+1, searchNode.y));\n            }\n            if (searchNode.y < collisionGrid.length-1) {\n                checkAdjacentNode(instance, searchNode,\n                    0, 1, STRAIGHT_COST * getTileCost(searchNode.x, searchNode.y+1));\n            }\n            if (searchNode.x > 0) {\n                checkAdjacentNode(instance, searchNode,\n                    -1, 0, STRAIGHT_COST * getTileCost(searchNode.x-1, searchNode.y));\n            }\n            if (diagonalsEnabled) {\n                if (searchNode.x > 0 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, -1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, 1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y+1));\n                    }\n                }\n                if (searchNode.x < collisionGrid[0].length-1 && searchNode.y > 0) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y-1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x+1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            1, -1, DIAGONAL_COST * getTileCost(searchNode.x+1, searchNode.y-1));\n                    }\n                }\n                if (searchNode.x > 0 && searchNode.y < collisionGrid.length-1) {\n\n                    if (allowCornerCutting ||\n                        (isTileWalkable(collisionGrid, acceptableTiles, searchNode.x, searchNode.y+1, searchNode) &&\n                        isTileWalkable(collisionGrid, acceptableTiles, searchNode.x-1, searchNode.y, searchNode))) {\n\n                        checkAdjacentNode(instance, searchNode,\n                            -1, 1, DIAGONAL_COST * getTileCost(searchNode.x-1, searchNode.y+1));\n                    }\n                }\n            }\n\n        }\n    };\n\n    // Private methods follow\n    var checkAdjacentNode = function(instance, searchNode, x, y, cost) {\n        var adjacentCoordinateX = searchNode.x+x;\n        var adjacentCoordinateY = searchNode.y+y;\n\n        if ((pointsToAvoid[adjacentCoordinateY] === undefined ||\n             pointsToAvoid[adjacentCoordinateY][adjacentCoordinateX] === undefined) &&\n            isTileWalkable(collisionGrid, acceptableTiles, adjacentCoordinateX, adjacentCoordinateY, searchNode)) {\n            var node = coordinateToNode(instance, adjacentCoordinateX,\n                adjacentCoordinateY, searchNode, cost);\n\n            if (node.list === undefined) {\n                node.list = OPEN_LIST;\n                instance.openList.push(node);\n            } else if (searchNode.costSoFar + cost < node.costSoFar) {\n                node.costSoFar = searchNode.costSoFar + cost;\n                node.parent = searchNode;\n                instance.openList.updateItem(node);\n            }\n        }\n    };\n\n    // Helpers\n    var isTileWalkable = function(collisionGrid, acceptableTiles, x, y, sourceNode) {\n        var directionalCondition = directionalConditions[y] && directionalConditions[y][x];\n        if (directionalCondition) {\n            var direction = calculateDirection(sourceNode.x - x, sourceNode.y - y)\n            var directionIncluded = function () {\n                for (var i = 0; i < directionalCondition.length; i++) {\n                    if (directionalCondition[i] === direction) return true\n                }\n                return false\n            }\n            if (!directionIncluded()) return false\n        }\n        for (var i = 0; i < acceptableTiles.length; i++) {\n            if (collisionGrid[y][x] === acceptableTiles[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    /**\n     * -1, -1 | 0, -1  | 1, -1\n     * -1,  0 | SOURCE | 1,  0\n     * -1,  1 | 0,  1  | 1,  1\n     */\n    var calculateDirection = function (diffX, diffY) {\n        if (diffX === 0 && diffY === -1) return EasyStar.TOP\n        else if (diffX === 1 && diffY === -1) return EasyStar.TOP_RIGHT\n        else if (diffX === 1 && diffY === 0) return EasyStar.RIGHT\n        else if (diffX === 1 && diffY === 1) return EasyStar.BOTTOM_RIGHT\n        else if (diffX === 0 && diffY === 1) return EasyStar.BOTTOM\n        else if (diffX === -1 && diffY === 1) return EasyStar.BOTTOM_LEFT\n        else if (diffX === -1 && diffY === 0) return EasyStar.LEFT\n        else if (diffX === -1 && diffY === -1) return EasyStar.TOP_LEFT\n        throw new Error('These differences are not valid: ' + diffX + ', ' + diffY)\n    };\n\n    var getTileCost = function(x, y) {\n        return (pointsToCost[y] && pointsToCost[y][x]) || costMap[collisionGrid[y][x]]\n    };\n\n    var coordinateToNode = function(instance, x, y, parent, cost) {\n        if (instance.nodeHash[y] !== undefined) {\n            if (instance.nodeHash[y][x] !== undefined) {\n                return instance.nodeHash[y][x];\n            }\n        } else {\n            instance.nodeHash[y] = {};\n        }\n        var simpleDistanceToTarget = getDistance(x, y, instance.endX, instance.endY);\n        if (parent!==null) {\n            var costSoFar = parent.costSoFar + cost;\n        } else {\n            costSoFar = 0;\n        }\n        var node = new Node(parent,x,y,costSoFar,simpleDistanceToTarget);\n        instance.nodeHash[y][x] = node;\n        return node;\n    };\n\n    var getDistance = function(x1,y1,x2,y2) {\n        if (diagonalsEnabled) {\n            // Octile distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            if (dx < dy) {\n                return DIAGONAL_COST * dx + dy;\n            } else {\n                return DIAGONAL_COST * dy + dx;\n            }\n        } else {\n            // Manhattan distance\n            var dx = Math.abs(x1 - x2);\n            var dy = Math.abs(y1 - y2);\n            return (dx + dy);\n        }\n    };\n}\n\nEasyStar.TOP = 'TOP'\nEasyStar.TOP_RIGHT = 'TOP_RIGHT'\nEasyStar.RIGHT = 'RIGHT'\nEasyStar.BOTTOM_RIGHT = 'BOTTOM_RIGHT'\nEasyStar.BOTTOM = 'BOTTOM'\nEasyStar.BOTTOM_LEFT = 'BOTTOM_LEFT'\nEasyStar.LEFT = 'LEFT'\nEasyStar.TOP_LEFT = 'TOP_LEFT'\n","const MAX_PARKED_BIKES = 4;\n\nclass Cell {\n  constructor(world, type, x, y, allowed_direction) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.agents = [];\n    this.bikes = 0;\n    this.allowed_direction = allowed_direction;\n  }\n\n  // Check if agent can be added to this cell\n  checkAddAgent(agent) {\n    if (this.type === \"SPAWN\") {\n      return true;\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\" && agent.type === \"PEDESTRIAN\") {\n      return true;\n    }\n    // Allow a maximum of:\n    // 2 agents of type BIKE\n    // or 3 agents of type PEDESTRIAN\n    // or 1 agent of type BIKE and 2 agents of type PEDESTRIAN\n    // or 2 agent of type BIKE and 1 agents of type PEDESTRIAN\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 30\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"BIKE\" &&\n      this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length >= 20\n    ) {\n      return false;\n    }\n    if (\n      agent.type === \"PEDESTRIAN\" &&\n      this.agents.filter(({ type }) => type === \"BIKE\").length >= 30\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  addAgent(agent) {\n    this.agents.push(agent);\n  }\n\n  removeAgent(agent) {\n    this.agents = this.agents.filter((a) => a !== agent);\n  }\n\n  canPark() {\n    return this.type === \"PARKING\" && this.bikes < MAX_PARKED_BIKES;\n  }\n\n  addBike() {\n    this.bikes++;\n  }\n\n  removeBike() {\n    this.bikes--;\n  }\n\n  draw(ctx, x, y, squareSize, drawDirection, drawCoords, drawCount) {\n    const canvas_x = x * squareSize;\n    const canvas_y = y * squareSize;\n\n    let color = \"#fefefe\";\n\n    color = this.getCellColor(color);\n\n    ctx.fillStyle = color;\n    ctx.fillRect(canvas_x, canvas_y, squareSize, squareSize);\n\n    // !! Draws directions in which agents are allowed to move\n    if (drawDirection) {\n      ctx.font = \"16px monospace\";\n      ctx.fillStyle = \"#ffffff\";\n      // make text slightly transparent\n      ctx.globalAlpha = 0.8;\n      let arrow = \"\";\n      if (this.allowed_direction === \"n\") {\n        arrow = \"↑\";\n      } else if (this.allowed_direction === \"s\") {\n        arrow = \"↓\";\n      } else if (this.allowed_direction === \"e\") {\n        arrow = \"→\";\n      } else if (this.allowed_direction === \"w\") {\n        arrow = \"←\";\n      } else if (this.allowed_direction === \"h\") {\n        arrow = \"↔\";\n      } else if (this.allowed_direction === \"v\") {\n        arrow = \"↕\";\n      }\n      ctx.fillText(arrow, canvas_x + 11, canvas_y + 20);\n      // reset transparency\n      ctx.globalAlpha = 1;\n    }\n\n    // Draw progress bar for amount of parked bikes\n    if (this.type === \"PARKING\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.fillRect(canvas_x + 2, canvas_y + squareSize - 8, squareSize - 4, 4);\n\n      if (this.bikes == MAX_PARKED_BIKES) {\n        ctx.fillStyle = \"#dc3545\";\n      } else {\n        ctx.fillStyle = \"#316cf4\";\n      }\n      ctx.fillRect(\n        canvas_x + 2,\n        canvas_y + squareSize - 8,\n        (squareSize + 4) * (this.bikes / MAX_PARKED_BIKES),\n        4\n      );\n    }\n\n    if (this.type === \"BUILDING_ENTRANCE\") {\n      ctx.fillStyle = \"#ffffff\";\n      ctx.font = \"16px monospace\";\n      ctx.fillText(\n        \"\" +\n          String(\n            this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length\n          ).padStart(3, \"0\"),\n        canvas_x + 1.5,\n        canvas_y + 21\n      );\n    } else {\n      const bikeAgents = this.agents.filter(({ type }) => type === \"BIKE\");\n      const pedestrianAgents = this.agents.filter(\n        ({ type }) => type === \"PEDESTRIAN\"\n      );\n      if (bikeAgents.length > 0) {\n        bikeAgents.forEach((agent, i) => {\n          // If the current agents is moving to the left or right in the agent's paths next step\n          // then draw the bike in the horizontal position\n          if (\n            agent.path &&\n            agent.path.length > 0 &&\n            agent.path[0].x === agent.cell.x\n          ) {\n            this.drawBike(ctx, x * squareSize, y * squareSize, \"vertical\", i);\n          } else {\n            this.drawBike(ctx, x * squareSize, y * squareSize, \"horizontal\", i);\n          }\n        });\n        if (pedestrianAgents.length > 0) {\n          pedestrianAgents.forEach((agent, i) => {\n            this.drawPedestrian(\n              ctx,\n              x * squareSize + 10,\n              y * squareSize + i * 10\n            );\n          });\n        }\n      } else if (pedestrianAgents.length > 0) {\n        pedestrianAgents.forEach((agent, i) => {\n          if (i < 2) {\n            this.drawPedestrian(ctx, x * squareSize + i * 10, y * squareSize);\n          } else {\n            this.drawPedestrian(ctx, x * squareSize + 5, y * squareSize + 10);\n          }\n        });\n      }\n    }\n\n    //!! Debug to show number of agents in cell\n    if (\n      drawCount &&\n      [\n        \"SPAWN\",\n        \"BIKE_PATH\",\n        \"PEDESTRIAN_PATH\",\n        \"ALL_PATH\",\n        \"PARKING\",\n        \"BUILDING_ENTRANCE\",\n      ].includes(this.type)\n    ) {\n      ctx.font = \"12px monospace\";\n      ctx.fillStyle = \"black\";\n      ctx.globalAlpha = 0.3;\n      ctx.fillText(\n        \"B:\" + this.agents.filter(({ type }) => type === \"BIKE\").length,\n        canvas_x + 2,\n        canvas_y + 12\n      );\n      ctx.fillText(\n        \"P:\" + this.agents.filter(({ type }) => type === \"PEDESTRIAN\").length,\n        canvas_x + 2,\n        canvas_y + 24\n      );\n      ctx.globalAlpha = 1;\n    }\n\n    // !! Draw coordinates\n    if (drawCoords) {\n      ctx.font = \"11px monospace\";\n      ctx.fillStyle = \"black\";\n      ctx.globalAlpha = 0.5;\n      ctx.fillText(this.x + \",\", canvas_x, canvas_y + 10);\n      ctx.fillText(this.y, canvas_x, canvas_y + 22);\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Drawing utilities, nothing important after this point :)\n\n  getCellColor(color) {\n    switch (this.type) {\n      case \"SPAWN\":\n        color = \"#e7b1b6\";\n        break;\n      case \"BIKE_PATH\":\n        color = \"#f3d8da\";\n        break;\n      case \"PEDESTRIAN_PATH\":\n        color = \"#eaecef\";\n        break;\n      case \"ALL_PATH\":\n        color = \"#cfd4d9\";\n        break;\n      case \"PARKING\":\n        color = \"#aeb5bc\";\n        break;\n      case \"EMPTY\":\n        color = \"#d5e6de\";\n        break;\n      case \"BUILDING\":\n        color = \"#a6c4f9\";\n        break;\n      case \"BUILDING_ENTRANCE\":\n        color = \"#7ba6f7\";\n        break;\n      case \"EXIT\":\n        color = \"#e7b1b6\";\n        break;\n    }\n    return color;\n  }\n\n  drawBike(ctx, x, y, orientation, i) {\n    ctx.fillStyle = \"#222529\";\n    if (orientation === \"vertical\") {\n      ctx.fillRect(x + 6 + 10 * i, y + 2, 5, 20);\n    } else {\n      ctx.fillRect(x + 2, y + 6 + 10 * i, 20, 5);\n    }\n  }\n\n  drawPedestrian(ctx, x, y) {\n    ctx.fillStyle = \"#fd7e14\";\n    ctx.fillRect(x + 6, y + 2, 5, 5);\n  }\n}\n\nexport default Cell;\n","import { addTimeToPark, addTimeToGoal } from \"./index\";\n\nclass Agent {\n  constructor(world, type, cell, strategy) {\n    this.world = world;\n    this.type = type;\n    this.spawn = cell;\n    this.cell = cell;\n    this.parked_cell = null;\n    this.strategy = strategy;\n    this.move_to = null;\n    this.exitRate = 0.01; // The rate at which agents leave the building across stragegies.\n\n    // This is for storing the calculated path\n    // and not recalculating it every tick\n    this.path = null;\n    this.calculatingPath = false;\n    this.stage = \"SPAWN\";\n\n    this.ticks = 0;\n    this.ticks_to_parked = null;\n    this.ticks_to_goal = null;\n  }\n\n  respawn() {\n    this.stage = \"SPAWN\";\n    this.cell = this.spawn;\n    this.parked_cell = null;\n    this.move_to = null;\n    this.path = null;\n    this.calculatingPath = false;\n    this.ticks = 0;\n    this.ticks_to_parked = null;\n    this.ticks_to_goal = null;\n  }\n\n  getPathfinder() {\n    return this.type === \"BIKE\"\n      ? this.world.bikePathfinder\n      : this.world.pedestrianPathfinder;\n  }\n\n  hasParked() {\n    this.ticks_to_parked = this.ticks;\n    addTimeToPark(this.strategy, this.ticks_to_parked);\n  }\n\n  hasReachedGoal() {\n    this.ticks_to_goal = this.ticks;\n    addTimeToGoal(this.strategy, this.ticks_to_goal);\n  }\n\n  park(location) {\n    if (this.cell.canPark()) {\n      if (\n        this.type === \"BIKE\" &&\n        this.cell.type === \"PARKING\" &&\n        this.parked_cell === null\n      ) {\n        this.parked_cell = this.cell;\n        this.type = \"PEDESTRIAN\";\n        this.cell.addBike();\n        this.world.addLotCapacity(location);\n        this.hasParked();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  unpark(location) {\n    if (\n      this.type === \"PEDESTRIAN\" &&\n      this.cell.type === \"PARKING\" &&\n      this.parked_cell !== null\n    ) {\n      this.cell.removeBike();\n      this.world.removeLotCapacity(location);\n      this.parked_cell = null;\n      this.type = \"BIKE\";\n    }\n  }\n\n  changeMoveTo(x, y, callback) {\n    this.calculatingPath = true;\n    this.move_to = [x, y];\n    this.path = null;\n\n    const pathfinder = this.getPathfinder();\n    pathfinder.findPath(\n      this.cell.x,\n      this.cell.y,\n      this.move_to[0],\n      this.move_to[1],\n      (path) => {\n        if (path !== null) {\n          this.path = path;\n        } else {\n          console.log(\"Agent has no way to reach its goal\");\n        }\n        this.calculatingPath = false;\n        if (callback && path !== null) {\n          callback();\n        }\n      }\n    );\n\n    pathfinder.calculate();\n  }\n\n  makeMove(nextCell) {\n    if (nextCell.checkAddAgent(this)) {\n      this.world.moveAgent(this, nextCell);\n      this.path.shift();\n    }\n  }\n\n  executePathSequence(callback) {\n    if (\n      this.calculatingPath == false &&\n      this.path !== null &&\n      this.path.length > 0\n    ) {\n      const nextCell = this.world.getCellAtCoordinates(\n        this.path[0].x,\n        this.path[0].y\n      );\n      this.makeMove(nextCell);\n    } else if (this.calculatingPath == false) {\n      callback();\n    }\n  }\n\n  finishedParkingStages() {\n    switch (this.stage) {\n      case \"LEAVING_PARKING\":\n        const buildingCell = this.world.getRandomCellOfType(\n          \"BUILDING_ENTRANCE\"\n        );\n        this.changeMoveTo(buildingCell.x, buildingCell.y, () => {\n          this.stage = \"MOVING_TO_GOAL\";\n        });\n        break;\n      case \"MOVING_TO_GOAL\":\n        this.executePathSequence(() => {\n          this.stage = \"IN_GOAL\";\n          this.hasReachedGoal();\n        });\n        break;\n      case \"IN_GOAL\":\n        if (Math.random() < this.exitRate) {\n          this.stage = \"LEAVING_GOAL\";\n        }\n        break;\n      case \"LEAVING_GOAL\":\n        this.changeMoveTo(this.parked_cell.x, this.parked_cell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_LEAVING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_LEAVING\":\n        this.executePathSequence(() => {\n          this.stage = \"UNPARKING\";\n        });\n        break;\n      case \"UNPARKING\":\n        this.unpark(this.lotChoice);\n        this.stage = \"LEAVING\";\n        break;\n      case \"LEAVING\":\n        this.changeMoveTo(this.spawn.x, this.spawn.y, () => {\n          this.stage = \"MOVING_TO_EXIT\";\n        });\n        break;\n      case \"MOVING_TO_EXIT\":\n        this.executePathSequence(() => {\n          this.stage = \"DESPAWN\";\n        });\n        break;\n      case \"DESPAWN\":\n        this.stage = \"SPAWN\";\n        this.world.removeAgent(this);\n        break;\n      default:\n        console.log(\"Unknown stage: \", this.stage);\n        break;\n    }\n  }\n\n  ////////////////////////\n  // STRATEGY EXECUTION //\n  ////////////////////////\n\n  startAct() {\n    this.ticks += 1;\n  }\n\n  act() {\n    console.warn(\"Agent.act() should be overridden\");\n  }\n}\n\nexport default Agent;\n","import Agent from \"../Agent\";\n\nclass SmartAgent extends Agent {\n  constructor(world, type, cell) {\n    super(world, type, cell, \"SMART\");\n\n    // Variables relating to lot preferences.\n    this.lots = [\"north\", \"east\", \"mid\", \"west\"];\n    this.lotChoice = null;\n    // NORTH, EAST, MID, WEST\n    this.lotPreference = [\n      Math.random(),\n      Math.random(),\n      Math.random(),\n      Math.random(),\n    ];\n    this.changePreference = 0.01; // The amount preference changes upon update.\n\n    // Variables for searching in lot.\n    this.searchPath = [];\n    this.searchTime = 6; // Tolances to look for a spot to park. Changes lot when searchFail == searchTime\n    this.searchFail = 0;\n  }\n\n  ////////////////////////\n  // STRATEGY EXECUTION //\n  ////////////////////////\n\n  // AUXILIARY FUNCTIONS //\n  randomValueInRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // Just returns the coordinates of a random parking spot depending on the location called.\n  randomLotCoordinates(location) {\n    // Returns random parking coordinates at the given location.\n    var coordinates = new Array(1);\n\n    if (location == \"north\") {\n      coordinates[0] = this.randomValueInRange(20, 30);\n      coordinates[1] = this.randomValueInRange(4, 7);\n    }\n    if (location == \"east\") {\n      coordinates[0] = this.randomValueInRange(23, 29);\n      if (Math.random() < 0.66) {\n        coordinates[1] = this.randomValueInRange(19, 21);\n      } else {\n        coordinates[1] = 23;\n      }\n    }\n    if (location == \"mid\") {\n      coordinates[0] = this.randomValueInRange(10, 17);\n      coordinates[1] = this.randomValueInRange(17, 19);\n    }\n    if (location == \"west\") {\n      coordinates[0] = this.randomValueInRange(4, 6);\n      coordinates[1] = this.randomValueInRange(17, 20);\n    }\n\n    return coordinates;\n  }\n\n  //Gets all the parking neighbours of the goal spot where the agent wants to park\n  getNeighbourSpotsInLot(goal_cell) {\n    \n    for (let X=goal_cell.x - 1; X <= goal_cell.x +1; X++){\n      for (let Y=goal_cell.y - 1; Y <= goal_cell.y +1; Y++) {\n        if (this.world.state[Y][X].type == \"PARKING\") {\n          if(X == goal_cell.x && Y == goal_cell.y) continue;\n          var coordinates = new Array(1);\n          coordinates[0] = X;\n          coordinates[1] = Y;\n\n          this.searchPath.push(coordinates);\n        }\n      }\n    }\n    return this.searchPath;\n  }\n\n  lotSearch() {\n    var coordinates = new Array(1);\n    const goal_cell = this.world.getCellAtCoordinates(this.move_to[0], this.move_to[1]);\n    \n    coordinates[0] = goal_cell.x;\n    coordinates[1] = goal_cell.y;\n    console.log(\"first goal was \" + coordinates[0] + \" and \" + coordinates[1])\n\n      for (let X = 0; X < this.searchPath.length; X++){\n      const new_goal_cell = this.world.getCellAtCoordinates(this.searchPath[X][0], this.searchPath[X][1]);\n        if(new_goal_cell.canPark()){\n          coordinates[0] = new_goal_cell.x;\n          coordinates[1] = new_goal_cell.y;\n          console.log(\"UPDATED goal was \" + coordinates[0] + \" and \" + coordinates[1])\n          break;\n        }\n      }\n\n    console.log(\"END \"+coordinates[0] + \" and \" + coordinates[1])\n    return coordinates;\n  }\n\n  // Returns the preference with the highest value.\n  checkPreference() {\n    var maxPref = Math.max(...this.lotPreference);\n    var index = this.lotPreference.indexOf(maxPref);\n    return this.lots[index];\n  }\n\n  // Basically the update functions for the agents. This one increases one option and decreases the others.\n  increasePreference(location) {\n    var index = this.lots.indexOf(location);\n\n    for (let i = 0; i < this.lots.length; i++) {\n      if (i == index) {\n        this.lotPreference[i] += this.changePreference;\n      } else {\n        this.lotPreference[i] -= this.changePreference;\n      }\n\n      this.lotPreference[i] = Math.round(this.lotPreference[i] * 100.0) / 100.0;\n\n      this.lotPreference[i] =\n        this.lotPreference[i] > 1\n          ? (this.lotPreference[i] = 1)\n          : this.lotPreference[i];\n\n      this.lotPreference[i] =\n        this.lotPreference[i] < 0\n          ? (this.lotPreference[i] = 0)\n          : this.lotPreference[i];\n    }\n  }\n\n  // Basically the update functions for the agents. This one decreases one option and increases the others.\n  decreasePreference(location) {\n    var index = this.lots.indexOf(location);\n\n    for (let i = 0; i < this.lots.length; i++) {\n      if (i == index) {\n        this.lotPreference[i] -= this.changePreference;\n      } else {\n        this.lotPreference[i] += this.changePreference;\n      }\n\n      this.lotPreference[i] = Math.round(this.lotPreference[i] * 100.0) / 100.0;\n\n      this.lotPreference[i] =\n        this.lotPreference[i] > 1\n          ? (this.lotPreference[i] = 1)\n          : this.lotPreference[i];\n\n      this.lotPreference[i] =\n        this.lotPreference[i] < 0\n          ? (this.lotPreference[i] = 0)\n          : this.lotPreference[i];\n    }\n  }\n\n  // SMART STRATEGY //\n  act() {\n    this.startAct();\n\n    switch (this.stage) {\n      case \"SPAWN\":\n        this.lotChoice = this.checkPreference();\n        var coordinates = this.randomLotCoordinates(this.lotChoice);\n\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVE_TO_LOT\";\n        });\n        const goal_cell = this.world.getCellAtCoordinates(this.move_to[0], this.move_to[1]);\n\n        this.getNeighbourSpotsInLot(goal_cell);\n        break;\n      case \"CHANGE_CHOICE\":\n        this.decreasePreference(this.lotChoice);\n\n        while (true) {\n          var choice = this.lots[Math.floor(Math.random() * this.lots.length)];\n\n          if (choice != this.lotChoice) {\n            this.lotChoice = choice;\n            break;\n          }\n        }\n\n        var coordinates = this.randomLotCoordinates(this.lotChoice);\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVE_TO_LOT\";\n        });\n        break;\n      case \"MOVE_TO_LOT\":\n        // console.log(\"movetolot\")\n        if (\n          this.calculatingPath == false &&\n          this.path !== null &&\n          this.path.length > 0\n        ) {\n          const nextCell = this.world.getCellAtCoordinates(\n            this.path[0].x,\n            this.path[0].y\n          );\n          this.makeMove(nextCell);\n\n          if (this.path.length < 5) {\n            this.stage = \"EVALUATE_LOT\";\n            if (this.path.length < 2){\n              const goal_cell = this.world.getCellAtCoordinates(this.move_to[0], this.move_to[1]);\n              if(goal_cell.canPark() != true){\n                this.stage = \"SEARCHING_IN_LOT\"\n              }\n            }\n          } \n          \n        } else if (this.calculatingPath == false) {\n          this.stage = \"PARKING\";\n        }\n        break;\n      case \"EVALUATE_LOT\":\n        if (this.world.getLotCapacity(this.lotChoice) > 0.8) {\n          this.stage = \"CHANGE_CHOICE\";\n        } else {\n          this.stage = \"MOVE_TO_LOT\";\n        }\n        break;\n      case \"SEARCHING_IN_LOT\":\n        var coordinates = this.lotSearch();\n        this.changeMoveTo(coordinates[0], coordinates[1], () => {\n          this.stage = \"MOVE_TO_LOT\";\n        });\n        break;\n      case \"PARKING\":\n        if (this.park(this.lotChoice)) {\n          this.stage = \"LEAVING_PARKING\";\n          this.increasePreference(this.lotChoice);\n        } else {\n          // console.warn(\"Could not park\");\n          this.searchFail += 1;\n          if (this.searchFail > this.searchTime) {\n            this.stage = \"CHANGE_CHOICE\";\n            this.searchFail = 0;\n          } else {\n            this.stage = \"SEARCHING_IN_LOT\";\n          }\n        }\n        break;\n      default:\n        this.finishedParkingStages();\n        break;\n    }\n  }\n}\n\nexport default SmartAgent;\n","import Agent from \"../Agent\";\n\nclass RandomAgent extends Agent {\n  constructor(world, type, cell) {\n    super(world, type, cell, \"RANDOM\");\n  }\n\n  act() {\n    this.startAct();\n\n    switch (this.stage) {\n      case \"SPAWN\":\n        const parkingCell = this.world.getRandomCellOfType(\"PARKING\");\n        this.changeMoveTo(parkingCell.x, parkingCell.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n      case \"MOVING_TO_PARKING_ENTERING\":\n        this.executePathSequence(() => {\n          this.stage = \"PARKING\";\n        });\n        break;\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          this.stage = \"SPAWN\";\n        }\n        break;\n      default:\n        this.finishedParkingStages();\n        break;\n    }\n  }\n}\n\nexport default RandomAgent;\n","import Agent from \"../Agent\";\n\nclass ClosestAgent extends Agent {\n  constructor(world, type, cell) {\n    super(world, type, cell, \"CLOSEST\");\n  }\n\n  act() {\n    this.startAct();\n\n    switch (this.stage) {\n      case \"SPAWN\":\n        // BFS for the closest valid parking spot\n        let coords = { x: 0, y: 0 };\n        let Q = [];\n        let grid = [];\n        const label = function (x, y) {\n          grid[y] ??= [];\n          grid[y][x] = 1;\n        };\n        label(this.cell.x, this.cell.y);\n        Q = [[this.cell.x, this.cell.y], ...Q];\n        BFS: while (Q.length) {\n          const V = Q.pop();\n          const cell = this.world.getCellAtCoordinates(V[0], V[1]);\n          if (cell.canPark()) {\n            coords = { x: V[0], y: V[1] };\n            break BFS;\n          }\n          const dirs = [\n            [V[1], V[0] + 1],\n            [V[1], V[0] - 1],\n            [V[1] + 1, V[0]],\n            [V[1] - 1, V[0]],\n          ];\n          for (const [y, x] of dirs) {\n            let next = this.world.state[y]?.[x];\n            let valid_types = [\n              \"SPAWN\",\n              \"BIKE_PATH\",\n              \"ALL_PATH\",\n              \"PARKING\",\n              \"EXIT\",\n            ];\n            if (\n              next !== undefined &&\n              valid_types.includes(next.type) &&\n              grid[y]?.[x] !== 1\n            ) {\n              label(x, y);\n              Q = [[x, y], ...Q];\n            }\n          }\n        }\n        this.changeMoveTo(coords.x, coords.y, () => {\n          this.stage = \"MOVING_TO_PARKING_ENTERING\";\n        });\n        break;\n\n      case \"MOVING_TO_PARKING_ENTERING\":\n        this.executePathSequence(() => {\n          this.stage = \"PARKING\";\n        });\n        break;\n\n      case \"PARKING\":\n        if (this.park()) {\n          this.stage = \"LEAVING_PARKING\";\n        } else {\n          this.stage = \"SPAWN\";\n        }\n        break;\n\n      default:\n        this.finishedParkingStages();\n        break;\n    }\n  }\n}\n\nexport default ClosestAgent;\n","import EasyStar from \"easystarjs\";\n\nimport Cell from \"./Cell\";\n\nimport Agent from \"./Agent\";\nimport SmartAgent from \"./Agents/SmartAgent\";\nimport RandomAgent from \"./Agents/RandomAgent\";\nimport ClosestAgent from \"./Agents/ClosestAgent\";\n\nfunction getDirectionArray(direction) {\n  switch (direction) {\n    case \"n\":\n      return [EasyStar.BOTTOM];\n    case \"s\":\n      return [EasyStar.TOP];\n    case \"e\":\n      return [EasyStar.LEFT];\n    case \"w\":\n      return [EasyStar.RIGHT];\n    case \"v\":\n      return [EasyStar.TOP, EasyStar.BOTTOM];\n    case \"h\":\n      return [EasyStar.LEFT, EasyStar.RIGHT];\n    default:\n      return [EasyStar.TOP, EasyStar.BOTTOM, EasyStar.LEFT, EasyStar.RIGHT];\n  }\n}\n\nclass World {\n  constructor(worldmap, mapDirection, selectedStrategies) {\n    this.state = [];\n    this.agentsActive = []; // Agents that are currently in the world.\n    this.agentsInactive = []; // Agents that are not currecntly in the world.\n\n    // This keeps track how full the lots are.\n    this.northCapacity = 0;\n    this.eastCapacity = 0;\n    this.midCapacity = 0;\n    this.westCapacity = 0;\n\n    this.tickCount = 0;\n\n    // Setup initial state\n    const rows = worldmap.split(\"\\n\").filter((row) => row.length > 0);\n    const directionRows = mapDirection\n      .split(\"\\n\")\n      .filter((row) => row.length > 0);\n\n    // Turns the characters from the worldmap into understandable strings\n    const types = {\n      // Useful stuff\n      S: \"SPAWN\",\n      E: \"EXIT\",\n      X: \"BUILDING_ENTRANCE\",\n      b: \"BIKE_PATH\",\n      w: \"PEDESTRIAN_PATH\",\n      a: \"ALL_PATH\",\n      p: \"PARKING\",\n      // Cosmetics\n      _: \"EMPTY\",\n      o: \"BUILDING\",\n    };\n\n    this.bikePathfinder = new EasyStar.js();\n    this.pedestrianPathfinder = new EasyStar.js();\n\n    // Create cells\n    // Loop over the 2D array of types, and create a new cell for each type\n    for (const [y, row] of rows.entries()) {\n      const directionRow = [...directionRows[y]];\n      const rowData = [...row].map((c, x) => {\n        const allowed_direction = directionRow[x];\n        const type = types[c];\n        const cell = new Cell(this, type, x, y, allowed_direction);\n\n        this.bikePathfinder.setDirectionalCondition(\n          x,\n          y,\n          getDirectionArray(allowed_direction)\n        );\n        this.pedestrianPathfinder.setDirectionalCondition(\n          x,\n          y,\n          getDirectionArray(allowed_direction)\n        );\n\n        return cell;\n      });\n      this.state.push(rowData);\n    }\n\n    this.bikePathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.bikePathfinder.setAcceptableTiles([\n      \"SPAWN\",\n      \"BIKE_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"EXIT\",\n    ]);\n    this.bikePathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.bikePathfinder.setTileCost(\"PARKING\", 4);\n\n    this.pedestrianPathfinder.setGrid(\n      this.state.map((row) => row.map((cell) => cell.type))\n    );\n    this.pedestrianPathfinder.setAcceptableTiles([\n      \"PEDESTRIAN_PATH\",\n      \"ALL_PATH\",\n      \"PARKING\",\n      \"BUILDING_ENTRANCE\",\n    ]);\n    this.pedestrianPathfinder.setTileCost(\"ALL_PATH\", 2);\n    this.pedestrianPathfinder.setTileCost(\"PARKING\", 3);\n  }\n\n  getCellAtCoordinates(x, y) {\n    return this.state[y][x];\n  }\n\n  getRandomCellOfType(type) {\n    const cells = this.state.flat().filter((cell) => cell.type === type);\n    return cells[Math.floor(Math.random() * cells.length)];\n  }\n\n  getParkingLots() {\n    return this.state.flat().filter((cell) => cell.type === \"PARKING\");\n  }\n\n  // These capacity functions evaulate the amount of bikes park in lots.\n  addLotCapacity(location) {\n    if (location == \"north\") {\n      this.northCapacity += 1;\n    }\n    if (location == \"east\") {\n      this.eastCapacity += 1;\n    }\n    if (location == \"mid\") {\n      this.midCapacity += 1;\n    }\n    if (location == \"west\") {\n      this.westCapacity += 1;\n    }\n  }\n\n  removeLotCapacity(location) {\n    if (location == \"north\") {\n      this.northCapacity -= 1;\n    }\n    if (location == \"east\") {\n      this.eastCapacity -= 1;\n    }\n    if (location == \"mid\") {\n      this.midCapacity -= 1;\n    }\n    if (location == \"west\") {\n      this.westCapacity -= 1;\n    }\n  }\n\n  getLotCapacity(location) {\n    if (location == \"north\") {\n      return this.northCapacity / 120;\n    }\n    if (location == \"east\") {\n      return this.eastCapacity / 72;\n    }\n    if (location == \"mid\") {\n      return this.midCapacity / 56;\n    }\n    if (location == \"west\") {\n      return this.westCapacity / 24;\n    }\n  }\n\n  getAgentClass(stragegy) {\n    switch (stragegy) {\n      case \"SMART\":\n        return SmartAgent;\n      case \"RANDOM\":\n        return RandomAgent;\n      case \"CLOSEST\":\n        return ClosestAgent;\n      default:\n        return Agent;\n    }\n  }\n\n  // Adds a new agent to the world, at a random spawn point\n  spawnAgent(strategy) {\n    // Find if there is an inactive agent with the same strategy\n    const oldAgent = this.agentsInactive.find(\n      (agent) => agent.strategy === strategy\n    );\n\n    // If there is an inactive agent, activate it\n    if (oldAgent) {\n      this.agentsActive.push(oldAgent);\n      this.agentsInactive = this.agentsInactive.filter((a) => oldAgent !== a);\n      oldAgent.spawn.addAgent(oldAgent);\n      oldAgent.respawn();\n    } else {\n      // If there is no inactive agent, create a new one\n      // Randomly pick a spawn cell\n      const spawn = this.getRandomCellOfType(\"SPAWN\");\n      const AgentClass = this.getAgentClass(strategy);\n      const newAgent = new AgentClass(this, \"BIKE\", spawn);\n      this.agentsActive.push(newAgent);\n      spawn.addAgent(newAgent);\n    }\n  }\n\n  // Remove agent from world\n  removeAgent(agent) {\n    this.agentsActive = this.agentsActive.filter((a) => a !== agent);\n    agent.cell.removeAgent(agent);\n    this.agentsInactive.push(agent);\n  }\n\n  // Moves agent to a new cell\n  moveAgent(agent, cell) {\n    if (cell.checkAddAgent(agent)) {\n      agent.cell.removeAgent(agent);\n      cell.addAgent(agent);\n      agent.cell = cell;\n    }\n  }\n\n  tick() {\n    this.tickCount++;\n    this.agentsActive.sort(function () {\n      return 0.5 - Math.random();\n    });\n    for (const agent of this.agentsActive) {\n      if (agent.type === \"BIKE\") {\n        agent.act();\n      } else if (agent.type === \"PEDESTRIAN\" && this.tickCount % 2 === 0) {\n        agent.act();\n      }\n    }\n  }\n}\n\nexport default World;\n","import \"./styles.css\";\nimport worldmap, { mapDirection } from \"./map\";\n\nimport World from \"./World\";\n\n// **********************************\n// Static config variables\n// **********************************\nconst experimentTicks = 10000;\nconst automatedLoopLength = 500;\nconst maxSpawnRateLimit = 1;\n\n// **********************************\n// Parameter variable setup\n// **********************************\n\nconst STRATEGIES = [\"SMART\", \"RANDOM\", \"CLOSEST\"];\n\n// Set default selected strategies\nlet selectedStrategies = [\"SMART\", \"RANDOM\", \"CLOSEST\"];\n\nvar currentTick = 0;\n\nvar csvRowsPark = \"strategy,time\\n\";\nvar csvRowsGoal = \"strategy,time\\n\";\n\nvar timeToParkData = [selectedStrategies];\nvar timeToGoalData = [selectedStrategies];\nvar trendData = {};\n// Add key to trendData for selectedStrategies\nfunction clearTrendData() {\n  trendData = {};\n  selectedStrategies.forEach((strategy) => {\n    trendData[strategy] = [];\n  });\n}\nclearTrendData();\n\nvar experimentMode = false;\n\nlet spawnRateType = \"auto\";\n\n// Config for automated spawn rate\nconst minSpawnRate = 0.2;\nvar maxSpawnRate = 1;\n\n// Default tickDelay and spawnspeed\nlet tickDelay = 20;\nlet oldTickDelay = tickDelay;\nlet spawnspeed = 0.2;\n\nlet paused = false;\n\n// **********************************\n// Utility functions\n// **********************************\n\n// Reset keeps current settings, but clears the world and restarts the simulation\nfunction reset() {\n  world = new World(worldmap, mapDirection);\n  timeToParkData = [selectedStrategies];\n  timeToGoalData = [selectedStrategies];\n  clearTrendData();\n  csvRowsPark = \"strategy,time\\n\";\n  csvRowsGoal = \"strategy,time\\n\";\n  currentTick = 0;\n  experimentMode = false;\n}\n\n// Turns stragegy name into a nice display name\nfunction strategyName(strategy) {\n  return strategy\n    .toLowerCase()\n    .replace(/^_*(.)|_+(.)/g, (s, c, d) =>\n      c ? c.toUpperCase() : \" \" + d.toUpperCase()\n    );\n}\n\n// Onclick of #experiment-mode, start experiment\ndocument.getElementById(\"experiment-mode\").onclick = function () {\n  reset();\n  tickDelay = 0;\n  experimentMode = true;\n  paused = false;\n};\n\n// **********************************\n// User Controls\n// **********************************\n\n// -- Spawn rate control\n// **********************************\n\n// return value for current bin using sine wave between min and max, over length of automatedLoopLength\nfunction getSpawnRate(currentBin) {\n  return (\n    minSpawnRate +\n    (maxSpawnRate - minSpawnRate) *\n    Math.pow(\n      (Math.sin((currentBin / automatedLoopLength) * 2 * Math.PI) + 1) / 2,\n      2\n    )\n  );\n}\n\n// Create array of spawn rates of length automated_loop_length\nlet spawnRates = [];\nfunction updateSpawnRates() {\n  spawnRates = [];\n  for (var i = 0; i < automatedLoopLength; i++) {\n    spawnRates.push(getSpawnRate(i));\n  }\n}\nupdateSpawnRates();\n\n// Draw bars for spawn_rate on canvas\nfunction drawSpawnRate(currentTick) {\n  document.getElementById(\"automated-spawn-rate-display\").innerHTML =\n    Math.floor(spawnRates[currentTick % automatedLoopLength] * 100) + \"%\";\n  const canvas = document.getElementById(\"spawn-rate\");\n  const ctx = canvas.getContext(\"2d\");\n  const width = canvas.width;\n  const height = canvas.height;\n  const barWidth = width / automatedLoopLength;\n  const barHeight = height / maxSpawnRateLimit;\n  ctx.clearRect(0, 0, width, height);\n  ctx.fillStyle = \"#fbe7a5\";\n  ctx.fillRect(0, 0, width, height);\n\n  // Plot bar for spawn rate at corresponding tick\n  for (var i = 0; i < automatedLoopLength; i++) {\n    ctx.fillStyle = \"#f6c344\";\n    ctx.fillRect(\n      i * barWidth,\n      height - spawnRates[i] * barHeight,\n      barWidth,\n      spawnRates[i] * barHeight\n    );\n  }\n\n  // Plot a line every 20%\n  for (var i = 0; i < maxSpawnRateLimit; i += 0.2) {\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#c49c35\";\n    ctx.beginPath();\n    ctx.moveTo(0, height - i * barHeight);\n    ctx.lineTo(width, height - i * barHeight);\n    ctx.stroke();\n    // Add text\n    ctx.fillStyle = \"#c49c35\";\n    ctx.font = \"20px Arial\";\n    ctx.fillText(\n      Math.floor(i * 100) + \"%\",\n      width - 42,\n      height - i * barHeight - 3\n    );\n  }\n\n  // Plot the current spawn rate\n  const currentIndex = currentTick % automatedLoopLength;\n  ctx.fillStyle = \"#312708\";\n  ctx.fillRect(\n    currentIndex * barWidth,\n    height - spawnRates[currentIndex] * barHeight - 2,\n    barWidth * 4,\n    spawnRates[currentIndex] * barHeight + 2\n  );\n  // Draw small circle on top of line\n  ctx.beginPath();\n  ctx.arc(\n    currentIndex * barWidth + barWidth * 2,\n    height - spawnRates[currentIndex] * barHeight,\n    5,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n}\ndrawSpawnRate(currentTick);\n\ndocument.getElementById(\"spawnspeed\").addEventListener(\"input\", (e) => {\n  spawnspeed = e.target.value;\n  document.getElementById(\"manual-spawn-rate-display\").innerHTML =\n    Math.round(spawnspeed * 100) + \"%\";\n});\n\n// Switch between spawn rate types\ndocument\n  .getElementById(\"spawnrate-radio-auto\")\n  .addEventListener(\"change\", function (event) {\n    spawnRateType = event.target.value;\n    document.getElementById(\"spawnspeed\").disabled = true;\n  });\ndocument\n  .getElementById(\"spawnrate-radio-manual\")\n  .addEventListener(\"change\", function (event) {\n    spawnRateType = event.target.value;\n    document.getElementById(\"spawnspeed\").disabled = false;\n  });\n\n// Switch between max_spawn_rate value\ndocument\n  .getElementById(\"automatedPeak1\")\n  .addEventListener(\"change\", function (event) {\n    maxSpawnRate = 1;\n    updateSpawnRates();\n  });\ndocument\n  .getElementById(\"automatedPeak2\")\n  .addEventListener(\"change\", function (event) {\n    maxSpawnRate = 0.66;\n    updateSpawnRates();\n  });\ndocument\n  .getElementById(\"automatedPeak3\")\n  .addEventListener(\"change\", function (event) {\n    maxSpawnRate = 0.33;\n    updateSpawnRates();\n  });\n\n// -- Reset button\n// **********************************\n\ndocument.getElementById(\"reset\").addEventListener(\"click\", () => {\n  reset();\n});\n\n// -- Strategy selection\n// **********************************\n\n// Create HTML checkboxes for each strategy, and add them and remove them to selectedStrategies when enabled/disabled\nconst strategyCheckboxes = document.getElementById(\"strategy-checkboxes\");\nSTRATEGIES.forEach((strategy) => {\n  const container = document.createElement(\"div\");\n  container.classList.add(\"form-check\");\n  const checkbox = document.createElement(\"input\");\n  checkbox.classList.add(\"form-check-input\");\n  checkbox.type = \"checkbox\";\n  checkbox.id = strategy;\n  checkbox.checked = selectedStrategies.includes(strategy);\n  checkbox.addEventListener(\"change\", () => {\n    if (checkbox.checked) {\n      selectedStrategies.push(strategy);\n    } else {\n      selectedStrategies = selectedStrategies.filter((s) => s !== strategy);\n    }\n    reset();\n  });\n  const label = document.createElement(\"label\");\n  label.htmlFor = strategy;\n  label.classList.add(\"form-check-label\");\n  label.appendChild(document.createTextNode(strategyName(strategy)));\n  strategyCheckboxes.appendChild(container);\n  container.appendChild(checkbox);\n  container.appendChild(label);\n});\n\n// -- Play/pause button\n// **********************************\n\ndocument.getElementById(\"play-pause\").addEventListener(\"click\", () => {\n  if (document.getElementById(\"play-pause\").innerHTML === \"Play\") {\n    document.getElementById(\"play-pause\").innerHTML = \"Pause\";\n    paused = false;\n  } else {\n    document.getElementById(\"play-pause\").innerHTML = \"Play\";\n    paused = true;\n  }\n});\n\n// -- Tickdelay\n// **********************************\ndocument.getElementById(\"tickdelay\").addEventListener(\"input\", (e) => {\n  tickDelay = e.target.value;\n});\n\n// -- Display options\n// **********************************\nvar drawDirection = false;\nvar drawCoords = false;\nvar drawCount = false;\n\ndocument.getElementById(\"draw-direction\").addEventListener(\"change\", (e) => {\n  drawDirection = e.target.checked;\n});\ndocument.getElementById(\"draw-coords\").addEventListener(\"change\", (e) => {\n  drawCoords = e.target.checked;\n});\ndocument.getElementById(\"draw-count\").addEventListener(\"change\", (e) => {\n  drawCount = e.target.checked;\n});\n\n// **********************************\n// Data gathering functions used by the agents\n// **********************************\n\nexport function addTimeToPark(strategy, data) {\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToParkData.push(row);\n  csvRowsPark += `${strategy},${data}\\n`;\n}\n\nexport function addTimeToGoal(strategy, data) {\n  const index = selectedStrategies.indexOf(strategy);\n  const row = Array(selectedStrategies.length).fill(null);\n  row[index] = data;\n  timeToGoalData.push(row);\n  trendData[strategy].push(data);\n  csvRowsGoal += `${strategy},${data}\\n`;\n}\n\n// **********************************\n// Results modal\n// **********************************\n\ngoogle.charts.load(\"current\", { packages: [\"corechart\"] });\ngoogle.charts.setOnLoadCallback(() => {\n  DrawChart(\"time-to-park\", timeToParkData, 0);\n  DrawChart(\"time-to-goal\", timeToGoalData, 0);\n  DrawTrend(trendData);\n});\n// Render charts onclick of #render-charts\ndocument.getElementById(\"render-charts\").addEventListener(\"click\", () => {\n  openResultsModal();\n});\ndocument.getElementById(\"closeResultsModal\").addEventListener(\"click\", () => {\n  closeResultsModal();\n});\n\nfunction openResultsModal() {\n  // Get maximum value of combined timeToParkData and timeToGoalData\n  let max = 0;\n  timeToParkData.forEach((row) => {\n    if (row[1] > max) {\n      max = row[1];\n    }\n  });\n  timeToGoalData.forEach((row) => {\n    if (row[1] > max) {\n      max = row[1];\n    }\n  });\n\n  DrawChart(\"time-to-park\", timeToParkData, max);\n  DrawChart(\"time-to-goal\", timeToGoalData, max);\n  DrawTrend(trendData);\n  document.getElementById(\"resultsModal\").style.display = \"block\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"block\";\n  oldTickDelay = tickDelay;\n  paused = true;\n}\nfunction closeResultsModal() {\n  document.getElementById(\"resultsModal\").style.display = \"none\";\n  document.getElementById(\"resultsModalBackdrop\").style.display = \"none\";\n  tickDelay = oldTickDelay;\n  paused = false;\n}\n\nfunction DrawChart(id, data, max) {\n  // Create the data table.\n  var data = google.visualization.arrayToDataTable(data);\n\n  // Set chart options\n  var options = {\n    width: \"1100\",\n    height: 300,\n    bar: { gap: 0 },\n    interpolateNulls: false,\n    chartArea: { left: 10, top: 0, bottom: 35 },\n    histogram: {\n      bucketSize: 20,\n      maxNumBuckets: 50,\n      minValue: 0,\n      maxValue: max,\n      lastBucketPercentile: 5,\n    },\n  };\n\n  // Instantiate and draw our chart, passing in some options.\n  var chart = new google.visualization.Histogram(document.getElementById(id));\n  chart.draw(data, options);\n}\n\nfunction DrawTrend(data) {\n  // Create new data table, with a column for each strategy\n  const dataRows = [];\n  const strategies = Object.keys(data);\n  // Average the data for each strategy per `automatedLoopLength` ticks\n  strategies.forEach((strategy) => {\n    const strategyData = data[strategy];\n    const averagedData = [];\n    for (let i = 0; i < strategyData.length; i += automatedLoopLength) {\n      const slice = strategyData.slice(i, i + automatedLoopLength);\n      const average = slice.reduce((a, b) => a + b, 0) / slice.length;\n      averagedData.push(average);\n    }\n    dataRows.push(averagedData);\n  });\n\n  console.log(dataRows);\n\n  // Find strategy with most data points, loop over this and create a row for each datapoint for all strategies at this index\n  const maxDataPoints = Math.max(...dataRows.map((row) => row.length));\n  const dataCombined = [];\n  for (let i = 0; i < maxDataPoints; i++) {\n    const row = [];\n    strategies.forEach((strategy, index) => {\n      row.push(dataRows[index][i] || null);\n    });\n    dataCombined.push(row);\n  }\n\n  const dataColumns = [[\"X\", ...strategies]];\n  dataCombined.forEach((row, index) => {\n    dataColumns.push([index, ...row]);\n  });\n  console.log(dataCombined)\n  var data = google.visualization.arrayToDataTable(dataColumns);\n\n  console.log(data);\n  // Trendline configuration for each strategy\n  const trendlines = {};\n  strategies.forEach((strategy, i) => {\n    trendlines[i] = {\n      type: \"exponential\",\n      visibleInLegend: true,\n      // opacity: 1,\n    };\n  });\n\n  var trendOptions = {\n    width: \"1100\",\n    height: 300,\n    bar: { gap: 0 },\n    interpolateNulls: false,\n    chartArea: { left: 10, top: 0, bottom: 35 },\n    trendlines: trendlines,\n    // dataOpacity: 0.1,\n    explorer: {},\n  };\n  var trendChart = new google.visualization.LineChart(document.getElementById(\"trend-time-to-goal\"));\n  trendChart.draw(data, trendOptions);\n}\n\n// **********************************\n// Read worldmap and create worldData\n// **********************************\n\nlet world = new World(worldmap, mapDirection);\n\n// **********************************\n// This runs the simulation loop every tick\n// **********************************\n\nfunction gameTick() {\n  if (!paused) {\n    // Spawn new agent sometimes\n    let rate = spawnspeed;\n    if (spawnRateType === \"auto\") {\n      rate = spawnRates[currentTick % automatedLoopLength];\n    }\n\n    if (Math.random() < rate) {\n      // Pick random strategy from selectedStrategies\n      if (selectedStrategies.length > 0) {\n        const strategy =\n          selectedStrategies[\n          Math.floor(Math.random() * selectedStrategies.length)\n          ];\n        world.spawnAgent(strategy);\n      }\n    }\n\n    // Move current agents\n    world.tick();\n    currentTick++;\n    drawSpawnRate(currentTick);\n    if (experimentMode) {\n      document.getElementById(\"experiment-progress\").style.width =\n        (currentTick / experimentTicks) * 100 + \"%\";\n    }\n    if (experimentMode && currentTick > experimentTicks) {\n      openResultsModal();\n      document.getElementById(\"experiment-progress\").style.width = \"0%\";\n      experimentMode = false;\n    }\n  }\n  setTimeout(gameTick, tickDelay);\n}\n\ngameTick();\n\n// **********************************\n// Draw world state to canvas\n// **********************************\n\nconst squareSize = 32;\n\nconst gridWidth = world.state[0].length;\nconst gridHeight = world.state.length;\n\nconst canvasWidth = gridWidth * squareSize;\nconst canvasHeight = gridHeight * squareSize;\n\nvar c = document.getElementById(\"canvas\");\nvar ctx = c.getContext(\"2d\");\nctx.canvas.width = canvasWidth;\nctx.canvas.height = canvasHeight;\n\nfunction drawCanvas() {\n  for (const [y, row] of world.state.entries()) {\n    for (const [x, cell] of row.entries()) {\n      cell.draw(ctx, x, y, squareSize, drawDirection, drawCoords, drawCount);\n    }\n  }\n  requestAnimationFrame(drawCanvas);\n}\n\nrequestAnimationFrame(drawCanvas);\n\n// **********************************\n// Download CSV data to file\n// **********************************\n\n// When button with id \"export-park\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-park\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsPark, `time-to-park`);\n});\n// When button with id \"export-goal\" is clicked, download the csv file with the data\ndocument.getElementById(\"export-goal\").addEventListener(\"click\", () => {\n  downloadCSV(csvRowsGoal, `time-to-goal`);\n});\n// Function to download the csv file\nfunction downloadCSV(csv, filename) {\n  var csvFile;\n  var downloadLink;\n\n  // CSV file\n  csvFile = new Blob([csv], { type: \"text/csv\" });\n  downloadLink = document.createElement(\"a\");\n  downloadLink.download =\n    filename + `===${selectedStrategies.join(\"-\")}===peak-${maxSpawnRate}.csv`;\n\n  // Add hidden download link\n  downloadLink.href = window.URL.createObjectURL(csvFile);\n  downloadLink.style.display = \"none\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}